{"ast":null,"code":"import _classCallCheck from \"F:\\\\Scripts\\\\my-office-master\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"F:\\\\Scripts\\\\my-office-master\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"F:\\\\Scripts\\\\my-office-master\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"F:\\\\Scripts\\\\my-office-master\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"F:\\\\Scripts\\\\my-office-master\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"F:\\\\Scripts\\\\my-office-master\\\\frontend\\\\src\\\\employee\\\\employeeList.jsx\";\nimport React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { getList, showUpdate, showDelete } from './employeeActions';\n\nvar EmployeeList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(EmployeeList, _Component);\n\n  function EmployeeList() {\n    _classCallCheck(this, EmployeeList);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(EmployeeList).apply(this, arguments));\n  }\n\n  _createClass(EmployeeList, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.getList();\n    }\n  }, {\n    key: \"getFormatedDate\",\n    value: function getFormatedDate(isoDate) {\n      var options = {\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric'\n      };\n      var date = new Date(isoDate);\n      return \"\".concat(date.toLocaleDateString('ru-RU', options), \" \\u0432 \").concat(date.toLocaleTimeString('ru-RU'));\n    }\n  }, {\n    key: \"renderRows\",\n    value: function renderRows() {\n      var _this = this;\n\n      var list = this.props.list;\n\n      if (!Array.isArray(list) || list.length === 0) {\n        console.log('Список сотрудников пуст');\n        return React.createElement(\"tr\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          colSpan: \"4\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24\n          },\n          __self: this\n        }, \"\\u0421\\u043E\\u0442\\u0440\\u0443\\u0434\\u043D\\u0438\\u043A\\u043E\\u0432 \\u043D\\u0435\\u0442\"));\n      }\n\n      return list.map(function (employee) {\n        return React.createElement(\"tr\", {\n          key: employee.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        }, employee.name), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32\n          },\n          __self: this\n        }, employee.identifier), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33\n          },\n          __self: this\n        }, employee.created_at ? _this.getFormatedDate(employee.created_at) : '-'), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          className: \"btn btn-default\",\n          onClick: function onClick() {\n            return _this.props.showUpdate(employee);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 35\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"icon ion-md-create\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39\n          },\n          __self: this\n        })), React.createElement(\"button\", {\n          className: \"btn btn-danger\",\n          onClick: function onClick() {\n            return _this.props.showDelete(employee);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 41\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"icon ion-md-trash\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 45\n          },\n          __self: this\n        }))));\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      console.log('Список сотрудников перед рендерингом:', this.props.list);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(\"table\", {\n        className: \"table\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, \"\\u0418\\u043C\\u044F\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"\\u0418\\u0434\\u0435\\u043D\\u0442\\u0438\\u0444\\u0438\\u043A\\u0430\\u0442\\u043E\\u0440\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"\\u0414\\u0430\\u0442\\u0430 \\u0441\\u043E\\u0437\\u0434\\u0430\\u043D\\u0438\\u044F\"), React.createElement(\"th\", {\n        className: \"table-actions\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"\\u0414\\u0435\\u0439\\u0441\\u0442\\u0432\\u0438\\u044F\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, this.renderRows())));\n    }\n  }]);\n\n  return EmployeeList;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  console.log('Данные сотрудников из Redux:', state.employee.list);\n  return {\n    list: state.employee.list || []\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    getList: getList,\n    showUpdate: showUpdate,\n    showDelete: showDelete\n  }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EmployeeList);","map":{"version":3,"sources":["F:\\Scripts\\my-office-master\\frontend\\src\\employee\\employeeList.jsx"],"names":["React","Component","bindActionCreators","connect","getList","showUpdate","showDelete","EmployeeList","props","isoDate","options","year","month","day","date","Date","toLocaleDateString","toLocaleTimeString","list","Array","isArray","length","console","log","map","employee","id","name","identifier","created_at","getFormatedDate","renderRows","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { getList, showUpdate, showDelete } from './employeeActions';\n\nclass EmployeeList extends Component {\n    componentDidMount() {\n        this.props.getList();\n    }\n\n    getFormatedDate(isoDate) {\n        const options = { year: 'numeric', month: 'long', day: 'numeric' };\n        const date = new Date(isoDate);\n        return `${date.toLocaleDateString('ru-RU', options)} в ${date.toLocaleTimeString('ru-RU')}`;\n    }\n\n    renderRows() {\n        const { list } = this.props;\n\n        if (!Array.isArray(list) || list.length === 0) {\n            console.log('Список сотрудников пуст');\n            return (\n                <tr>\n                    <td colSpan=\"4\">Сотрудников нет</td>\n                </tr>\n            );\n        }\n\n        return list.map(employee => (\n            <tr key={employee.id}>\n                <td>{employee.name}</td>\n                <td>{employee.identifier}</td>\n                <td>{employee.created_at ? this.getFormatedDate(employee.created_at) : '-'}</td>\n                <td>\n                    <button\n                        className='btn btn-default'\n                        onClick={() => this.props.showUpdate(employee)}\n                    >\n                        <i className='icon ion-md-create'></i>\n                    </button>\n                    <button\n                        className='btn btn-danger'\n                        onClick={() => this.props.showDelete(employee)}\n                    >\n                        <i className='icon ion-md-trash'></i>\n                    </button>\n                </td>\n            </tr>\n        ));\n    }\n\n    render() {\n        console.log('Список сотрудников перед рендерингом:', this.props.list);\n\n        return (\n            <div>\n                <table className='table'>\n                    <thead>\n                        <tr>\n                            <th>Имя</th>\n                            <th>Идентификатор</th>\n                            <th>Дата создания</th>\n                            <th className='table-actions'>Действия</th>\n                        </tr>\n                    </thead>\n                    <tbody>{this.renderRows()}</tbody>\n                </table>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = state => {\n    console.log('Данные сотрудников из Redux:', state.employee.list);\n    return {\n        list: state.employee.list || []\n    };\n};\n\n\nconst mapDispatchToProps = dispatch =>\n    bindActionCreators({ getList, showUpdate, showDelete }, dispatch);\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EmployeeList);\n"]},"metadata":{},"sourceType":"module"}