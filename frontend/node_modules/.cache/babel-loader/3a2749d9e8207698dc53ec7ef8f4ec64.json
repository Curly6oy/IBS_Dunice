{"ast":null,"code":"import _classCallCheck from \"F:\\\\Scripts\\\\IBS_Dunice\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"F:\\\\Scripts\\\\IBS_Dunice\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"F:\\\\Scripts\\\\IBS_Dunice\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"F:\\\\Scripts\\\\IBS_Dunice\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"F:\\\\Scripts\\\\IBS_Dunice\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"F:\\\\Scripts\\\\IBS_Dunice\\\\frontend\\\\src\\\\desk\\\\deskForm.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { reduxForm, Field, change } from 'redux-form';\nimport { init, getOfficeData, prepareToShow, showUpdate, showCreate, update } from './deskActions';\nimport { getList as getRooms } from '../room/roomActions';\nimport { getList as getEmployees } from '../employee/employeeActions';\nimport { getList as getEquipments } from '../equipment/equipmentActions';\nimport If from '../common/operator/if';\nimport Grid from '../common/layout/grid';\nimport OfficeMap from 'office-map';\nimport Select from '../common/form/select';\nimport EquipmentList from './equipmentList';\nimport EmployeeList from './employeeList';\nimport SelectWithIcon from '../common/form/selectWithIcon';\nimport FileUploadComponent from './FileUploadComponent';\nimport './desk.css';\n\nvar DeskForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(DeskForm, _Component);\n\n  function DeskForm(props) {\n    var _this;\n\n    _classCallCheck(this, DeskForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DeskForm).call(this, props));\n\n    _this.handleFileUpload = function (file) {\n      var formData = new FormData();\n      formData.append('templateFile', file);\n      fetch('/api/templates/upload', {\n        method: 'POST',\n        body: formData\n      }).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        console.log('File uploaded successfully:', data); // Optionally trigger a redux action if you need to store the response in your state\n      }).catch(function (error) {\n        console.error('Error uploading file:', error);\n      });\n    };\n\n    _this.onEmployeeChange = function (employee, index) {\n      _this.props.dispatch(change('deskForm', \"employees[\".concat(index, \"].identifier\"), employee ? employee.identifier : ''));\n    };\n\n    _this.onEquipmentChange = function (equipment, index) {\n      _this.props.dispatch(change('deskForm', \"equipments[\".concat(index, \"].type\"), equipment ? equipment.type : ''));\n    };\n\n    _this.props.getRooms();\n\n    _this.props.getEmployees();\n\n    _this.props.getEquipments();\n\n    return _this;\n  }\n\n  _createClass(DeskForm, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          handleSubmit = _this$props.handleSubmit,\n          readOnly = _this$props.readOnly,\n          rooms = _this$props.rooms,\n          employees = _this$props.employees,\n          equipments = _this$props.equipments,\n          officeData = _this$props.officeData,\n          idSelected = _this$props.idSelected,\n          submitLabel = _this$props.submitLabel;\n      var functionShow = submitLabel === 'Create' ? showCreate : showUpdate;\n      return React.createElement(\"form\", {\n        role: \"form\",\n        onSubmit: handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"box-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(Field, {\n        name: \"roomId\",\n        label: \"\\u041A\\u043E\\u043C\\u043D\\u0430\\u0442\\u0430\",\n        cols: \"12 6\",\n        component: Select,\n        readOnly: readOnly,\n        options: rooms,\n        optionValue: \"id\",\n        optionLabel: \"name\",\n        autoFocus: true,\n        inputOnChange: this.props.getOfficeData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }), React.createElement(Field, {\n        name: \"chairDirection\",\n        label: \"\\u041D\\u0430\\u043F\\u0440\\u0430\\u0432\\u043B\\u0435\\u043D\\u0438\\u0435 \\u0441\\u0442\\u043E\\u043B\\u0430\",\n        cols: \"12 2\",\n        component: SelectWithIcon,\n        icon: \"compass\",\n        readOnly: readOnly,\n        options: this.getPossibleDirections(),\n        optionValue: \"id\",\n        optionLabel: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }), React.createElement(Field, {\n        name: \"x\",\n        label: \"X \\u043F\\u043E\\u0437\\u0438\\u0446\\u0438\\u044F\",\n        cols: \"12 2\",\n        component: SelectWithIcon,\n        icon: \"map-marker\",\n        readOnly: readOnly,\n        options: this.getPossiblePositions(),\n        optionValue: \"id\",\n        optionLabel: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }), React.createElement(Field, {\n        name: \"y\",\n        label: \"Y \\u043F\\u043E\\u0437\\u0438\\u0446\\u0438\\u044F\",\n        cols: \"12 2\",\n        component: SelectWithIcon,\n        icon: \"map-marker\",\n        readOnly: readOnly,\n        options: this.getPossiblePositions(),\n        optionValue: \"id\",\n        optionLabel: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }), React.createElement(EmployeeList, {\n        cols: \"12 6\",\n        list: employees,\n        readOnly: readOnly,\n        field: \"employees\",\n        onSelected: this.onEmployeeChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      }), React.createElement(EquipmentList, {\n        cols: \"12 6\",\n        list: equipments,\n        readOnly: readOnly,\n        field: \"equipments\",\n        onSelected: this.onEquipmentChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }), React.createElement(FileUploadComponent, {\n        onFileSelect: this.handleFileUpload,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"box-footer text-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      }, submitLabel), React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-default\",\n        onClick: this.props.init,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 80\n        },\n        __self: this\n      }, \"Cancel\")), React.createElement(If, {\n        test: officeData && officeData.length > 0,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        cols: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      }, React.createElement(OfficeMap, {\n        data: officeData,\n        horizontalSize: 6,\n        verticalSize: 6,\n        onSelect: function onSelect(desk) {\n          return _this2.props.prepareToShow(desk, functionShow);\n        },\n        onMove: function onMove(desk) {\n          return _this2.props.update(desk, functionShow);\n        },\n        editMode: true,\n        showNavigator: true,\n        fields: ['type', 'patrimony', 'specification'],\n        idSelected: idSelected,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }))));\n    }\n  }, {\n    key: \"getPossibleDirections\",\n    value: function getPossibleDirections() {\n      return ['north', 'south', 'east', 'west', 'north-east', 'north-west', 'south-east', 'south-west'].map(function (dir) {\n        return {\n          id: dir,\n          name: dir\n        };\n      });\n    }\n  }, {\n    key: \"getPossiblePositions\",\n    value: function getPossiblePositions() {\n      return Array.from({\n        length: 26\n      }, function (_, i) {\n        return {\n          id: i,\n          name: String(i)\n        };\n      });\n    }\n  }]);\n\n  return DeskForm;\n}(Component);\n\nvar formWrapped = reduxForm({\n  form: 'deskForm',\n  destroyOnUnmount: false\n})(DeskForm);\nvar selector = formValueSelector('deskForm');\n\nfunction mapStateToProps(state) {\n  return {\n    rooms: state.room.list,\n    officeData: state.desk.officeData,\n    equipments: state.equipment.list,\n    employees: state.employee.list,\n    idSelected: state.desk.idSelected\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    init: init,\n    getRooms: getRooms,\n    getEmployees: getEmployees,\n    getEquipments: getEquipments,\n    getOfficeData: getOfficeData,\n    prepareToShow: prepareToShow,\n    showCreate: showCreate,\n    showUpdate: showUpdate,\n    update: update\n  }, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(formWrapped);","map":{"version":3,"sources":["F:\\Scripts\\IBS_Dunice\\frontend\\src\\desk\\deskForm.jsx"],"names":["React","Component","connect","bindActionCreators","reduxForm","Field","change","init","getOfficeData","prepareToShow","showUpdate","showCreate","update","getList","getRooms","getEmployees","getEquipments","If","Grid","OfficeMap","Select","EquipmentList","EmployeeList","SelectWithIcon","FileUploadComponent","DeskForm","props","handleFileUpload","file","formData","FormData","append","fetch","method","body","then","response","json","data","console","log","catch","error","onEmployeeChange","employee","index","dispatch","identifier","onEquipmentChange","equipment","type","handleSubmit","readOnly","rooms","employees","equipments","officeData","idSelected","submitLabel","functionShow","getPossibleDirections","getPossiblePositions","length","desk","map","dir","id","name","Array","from","_","i","String","formWrapped","form","destroyOnUnmount","selector","formValueSelector","mapStateToProps","state","room","list","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { reduxForm, Field, change } from 'redux-form';\n\nimport { init, getOfficeData, prepareToShow, showUpdate, showCreate, update } from './deskActions';\nimport { getList as getRooms } from '../room/roomActions';\nimport { getList as getEmployees } from '../employee/employeeActions';\nimport { getList as getEquipments } from '../equipment/equipmentActions';\nimport If from '../common/operator/if';\nimport Grid from '../common/layout/grid';\nimport OfficeMap from 'office-map';\n\nimport Select from '../common/form/select';\nimport EquipmentList from './equipmentList';\nimport EmployeeList from './employeeList';\nimport SelectWithIcon from '../common/form/selectWithIcon';\nimport FileUploadComponent from './FileUploadComponent';\n\nimport './desk.css';\n\nclass DeskForm extends Component {\n    constructor(props) {\n        super(props);\n        this.props.getRooms();\n        this.props.getEmployees();\n        this.props.getEquipments();\n    }\n\n    handleFileUpload = (file) => {\n        const formData = new FormData();\n        formData.append('templateFile', file);\n\n        fetch('/api/templates/upload', {\n            method: 'POST',\n            body: formData\n        })\n        .then(response => response.json())\n        .then(data => {\n            console.log('File uploaded successfully:', data);\n            // Optionally trigger a redux action if you need to store the response in your state\n        })\n        .catch(error => {\n            console.error('Error uploading file:', error);\n        });\n    }\n\n    render() {\n        const { handleSubmit, readOnly, rooms, employees, equipments, officeData, idSelected, submitLabel } = this.props;\n        const functionShow = submitLabel === 'Create' ? showCreate : showUpdate;\n\n        return (\n            <form role=\"form\" onSubmit={handleSubmit}>\n                <div className='box-body'>\n                    <Field name='roomId' label='Комната' cols='12 6'\n                        component={Select} readOnly={readOnly}\n                        options={rooms} optionValue='id' optionLabel='name' autoFocus={true}\n                        inputOnChange={this.props.getOfficeData} />\n                    <Field name='chairDirection' label='Направление стола' cols='12 2'\n                        component={SelectWithIcon} icon=\"compass\" readOnly={readOnly}\n                        options={this.getPossibleDirections()} optionValue='id' optionLabel='name' />\n                    <Field name='x' label='X позиция' cols='12 2'\n                        component={SelectWithIcon} icon=\"map-marker\" readOnly={readOnly}\n                        options={this.getPossiblePositions()} optionValue='id' optionLabel='name' />\n                    <Field name='y' label='Y позиция' cols='12 2'\n                        component={SelectWithIcon} icon=\"map-marker\" readOnly={readOnly}\n                        options={this.getPossiblePositions()} optionValue='id' optionLabel='name' />\n\n                    <EmployeeList cols='12 6' list={employees} readOnly={readOnly}\n                        field='employees' onSelected={this.onEmployeeChange} />\n                    <EquipmentList cols='12 6' list={equipments} readOnly={readOnly}\n                        field='equipments' onSelected={this.onEquipmentChange} />\n\n                    <FileUploadComponent onFileSelect={this.handleFileUpload} />\n                </div>\n                <div className='box-footer text-right'>\n                    <button type='submit' className='btn btn-primary'>\n                        {submitLabel}\n                    </button>\n                    <button type='button' className='btn btn-default' onClick={this.props.init}>\n                        Cancel\n                    </button>\n                </div>\n                <If test={officeData && officeData.length > 0}>\n                    <Grid cols='12'>\n                        <OfficeMap\n                            data={officeData}\n                            horizontalSize={6}\n                            verticalSize={6}\n                            onSelect={desk => this.props.prepareToShow(desk, functionShow)}\n                            onMove={desk => this.props.update(desk, functionShow)}\n                            editMode={true}\n                            showNavigator={true}\n                            fields={['type', 'patrimony', 'specification']}\n                            idSelected={idSelected} />\n                    </Grid>\n                </If>\n            </form>\n        );\n    }\n\n    getPossibleDirections() {\n        return ['north', 'south', 'east', 'west', 'north-east', 'north-west', 'south-east', 'south-west'].map(dir => ({ id: dir, name: dir }));\n    }\n\n    getPossiblePositions() {\n        return Array.from({ length: 26 }, (_, i) => ({ id: i, name: String(i) }));\n    }\n\n    onEmployeeChange = (employee, index) => {\n        this.props.dispatch(change('deskForm', `employees[${index}].identifier`, employee ? employee.identifier : ''));\n    }\n\n    onEquipmentChange = (equipment, index) => {\n        this.props.dispatch(change('deskForm', `equipments[${index}].type`, equipment ? equipment.type : ''));\n    }\n}\n\nconst formWrapped = reduxForm({ form: 'deskForm', destroyOnUnmount: false })(DeskForm);\nconst selector = formValueSelector('deskForm');\n\nfunction mapStateToProps(state) {\n    return {\n        rooms: state.room.list,\n        officeData: state.desk.officeData,\n        equipments: state.equipment.list,\n        employees: state.employee.list,\n        idSelected: state.desk.idSelected\n    };\n}\n\nfunction mapDispatchToProps(dispatch) {\n    return bindActionCreators({\n        init, getRooms, getEmployees, getEquipments, getOfficeData, prepareToShow, showCreate, showUpdate, update\n    }, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(formWrapped);\n"]},"metadata":{},"sourceType":"module"}