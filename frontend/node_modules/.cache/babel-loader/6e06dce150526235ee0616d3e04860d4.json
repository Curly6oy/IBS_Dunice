{"ast":null,"code":"import _classCallCheck from \"F:\\\\Scripts\\\\IBS_Dunice\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"F:\\\\Scripts\\\\IBS_Dunice\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"F:\\\\Scripts\\\\IBS_Dunice\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"F:\\\\Scripts\\\\IBS_Dunice\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"F:\\\\Scripts\\\\IBS_Dunice\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"F:\\\\Scripts\\\\IBS_Dunice\\\\frontend\\\\src\\\\desk\\\\deskForm.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { reduxForm, Field, formValueSelector, change } from 'redux-form';\nimport { init, getOfficeData, prepareToShow, showUpdate, showCreate, update } from './deskActions';\nimport { getList as getRooms } from '../room/roomActions';\nimport { getList as getEmployees } from '../employee/employeeActions';\nimport { getList as getEquipments } from '../equipment/equipmentActions';\nimport If from '../common/operator/if';\nimport Grid from '../common/layout/grid';\nimport OfficeMap from 'office-map';\nimport Select from '../common/form/select';\nimport EquipmentList from './equipmentList';\nimport EmployeeList from './employeeList';\nimport SelectWithIcon from '../common/form/selectWithIcon';\nimport './desk.css';\n\nvar DeskForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(DeskForm, _Component);\n\n  function DeskForm(props) {\n    var _this;\n\n    _classCallCheck(this, DeskForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DeskForm).call(this, props));\n\n    _this.onEmployeeChange = function (employee, member, index) {\n      _this.props.dispatch(change(\"deskForm\", \"employees[\".concat(index, \"].identifier\"), employee && employee.identifier || ''));\n    };\n\n    _this.onEquipmentChange = function (equipment, member, index) {\n      _this.props.dispatch(change(\"deskForm\", \"equipments[\".concat(index, \"].type\"), equipment && equipment.type || ''));\n    };\n\n    props.getRooms();\n    props.getEmployees();\n    props.getEquipments();\n    return _this;\n  }\n\n  _createClass(DeskForm, [{\n    key: \"getPossibleDirections\",\n    value: function getPossibleDirections() {\n      var directions = [];\n      directions.push({\n        id: 'north',\n        name: 'North'\n      });\n      directions.push({\n        id: 'south',\n        name: 'South'\n      });\n      directions.push({\n        id: 'east',\n        name: 'East'\n      });\n      directions.push({\n        id: 'west',\n        name: 'West'\n      });\n      directions.push({\n        id: 'north-east',\n        name: 'North-east'\n      });\n      directions.push({\n        id: 'north-west',\n        name: 'North-west'\n      });\n      directions.push({\n        id: 'south-east',\n        name: 'South-east'\n      });\n      directions.push({\n        id: 'south-west',\n        name: 'South-west'\n      });\n      return directions;\n    }\n  }, {\n    key: \"getPossiblePositions\",\n    value: function getPossiblePositions() {\n      var positions = [];\n\n      for (var i = 0; i < 26; i++) {\n        positions.push({\n          id: i,\n          name: i\n        });\n      }\n\n      return positions;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          rooms = _this$props.rooms,\n          handleSubmit = _this$props.handleSubmit,\n          submitLabel = _this$props.submitLabel,\n          readOnly = _this$props.readOnly,\n          getOfficeData = _this$props.getOfficeData,\n          officeData = _this$props.officeData,\n          showCreate = _this$props.showCreate,\n          showUpdate = _this$props.showUpdate,\n          equipments = _this$props.equipments,\n          employees = _this$props.employees,\n          idSelected = _this$props.idSelected;\n      var functionShow = submitLabel === 'Create' ? showCreate : showUpdate;\n      return React.createElement(\"form\", {\n        role: \"form\",\n        onSubmit: handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"box-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, React.createElement(Field, {\n        name: \"roomId\",\n        label: \"Room\",\n        cols: \"12 6\",\n        component: Select,\n        readOnly: readOnly,\n        options: rooms,\n        optionValue: \"id\",\n        optionLabel: \"name\",\n        autoFocus: true,\n        inputOnChange: getOfficeData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }), React.createElement(Field, {\n        name: \"chairDirection\",\n        label: \"Chair direction\",\n        cols: \"12 2\",\n        component: SelectWithIcon,\n        icon: \"compass\",\n        readOnly: readOnly,\n        options: this.getPossibleDirections(),\n        optionValue: \"id\",\n        optionLabel: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }), React.createElement(Field, {\n        name: \"x\",\n        label: \"X position\",\n        cols: \"12 2\",\n        component: SelectWithIcon,\n        icon: \"map-marker\",\n        readOnly: readOnly,\n        options: this.getPossiblePositions(),\n        optionValue: \"id\",\n        optionLabel: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75\n        },\n        __self: this\n      }), React.createElement(Field, {\n        name: \"y\",\n        label: \"Y position\",\n        cols: \"12 2\",\n        component: SelectWithIcon,\n        icon: \"map-marker\",\n        readOnly: readOnly,\n        options: this.getPossiblePositions(),\n        optionValue: \"id\",\n        optionLabel: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }), React.createElement(EmployeeList, {\n        id: \"employeeList\",\n        cols: \"12 6\",\n        list: employees,\n        readOnly: readOnly,\n        field: \"employees\",\n        legend: \"Employee\",\n        icon: \"user-plus\",\n        onSelected: this.onEmployeeChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }), React.createElement(EquipmentList, {\n        cols: \"12 6\",\n        list: equipments,\n        readOnly: readOnly,\n        field: \"equipments\",\n        legend: \"Equipments\",\n        icon: \"laptop\",\n        onSelected: this.onEquipmentChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 85\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"box-footer text-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 89\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-\".concat(this.props.submitClass),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, this.props.submitLabel), React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-default\",\n        onClick: this.props.init,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, this.props.cancelLabel)), React.createElement(If, {\n        test: officeData && officeData.length > 0,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"box-footer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        key: \"key_office_data\",\n        cols: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"box_ box-default\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"box-header with-border\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-building-o\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }), React.createElement(\"h3\", {\n        className: \"box-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102\n        },\n        __self: this\n      }, \"MY OFFICE - \", officeData && officeData[0] && officeData[0].room)), React.createElement(\"div\", {\n        className: \"box-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(OfficeMap, {\n        id: officeData && officeData[0] && officeData[0].room,\n        data: officeData,\n        horizontalSize: 6,\n        verticalSize: 6,\n        onSelect: function onSelect(desk) {\n          return _this2.props.prepareToShow(desk, functionShow);\n        },\n        onMove: function onMove(desk) {\n          return _this2.props.update(desk, functionShow);\n        },\n        editMode: true,\n        showNavigator: true,\n        fields: ['type', 'patrimony', 'specification'],\n        idSelected: idSelected,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      })))))));\n    }\n  }]);\n\n  return DeskForm;\n}(Component);\n\nDeskForm = reduxForm({\n  form: 'deskForm',\n  destroyOnUnmount: false\n})(DeskForm);\nvar selector = formValueSelector('deskForm');\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    rooms: state.room.list,\n    officeData: state.desk.officeData,\n    equipments: state.equipment.list,\n    employees: state.employee.list,\n    idSelected: state.desk.idSelected\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    init: init,\n    getRooms: getRooms,\n    getEmployees: getEmployees,\n    getEquipments: getEquipments,\n    getOfficeData: getOfficeData,\n    prepareToShow: prepareToShow,\n    showCreate: showCreate,\n    showUpdate: showUpdate,\n    update: update\n  }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DeskForm);","map":{"version":3,"sources":["F:\\Scripts\\IBS_Dunice\\frontend\\src\\desk\\deskForm.jsx"],"names":["React","Component","connect","bindActionCreators","reduxForm","Field","formValueSelector","change","init","getOfficeData","prepareToShow","showUpdate","showCreate","update","getList","getRooms","getEmployees","getEquipments","If","Grid","OfficeMap","Select","EquipmentList","EmployeeList","SelectWithIcon","DeskForm","props","onEmployeeChange","employee","member","index","dispatch","identifier","onEquipmentChange","equipment","type","directions","push","id","name","positions","i","rooms","handleSubmit","submitLabel","readOnly","officeData","equipments","employees","idSelected","functionShow","getPossibleDirections","getPossiblePositions","submitClass","cancelLabel","length","room","desk","form","destroyOnUnmount","selector","mapStateToProps","state","list","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { reduxForm, Field, formValueSelector, change } from 'redux-form'\n\nimport { init, getOfficeData, prepareToShow, showUpdate, showCreate, update } from './deskActions'\nimport { getList as getRooms } from '../room/roomActions'\nimport { getList as getEmployees } from '../employee/employeeActions'\nimport { getList as getEquipments } from '../equipment/equipmentActions'\nimport If from '../common/operator/if'\nimport Grid from '../common/layout/grid'\nimport OfficeMap from 'office-map'\n\nimport Select from '../common/form/select'\nimport EquipmentList from './equipmentList'\nimport EmployeeList from './employeeList'\nimport SelectWithIcon from '../common/form/selectWithIcon'\n\nimport './desk.css'\n\nclass DeskForm extends Component {\n    constructor(props) {\n        super(props)\n\n        props.getRooms()\n        props.getEmployees()\n        props.getEquipments()\n    }\n\n    getPossibleDirections() {\n        const directions = []\n        directions.push({ id: 'north', name: 'North' })\n        directions.push({ id: 'south', name: 'South' })\n        directions.push({ id: 'east', name: 'East' })\n        directions.push({ id: 'west', name: 'West' })\n        directions.push({ id: 'north-east', name: 'North-east' })\n        directions.push({ id: 'north-west', name: 'North-west' })\n        directions.push({ id: 'south-east', name: 'South-east' })\n        directions.push({ id: 'south-west', name: 'South-west' })\n        return directions\n    }\n\n    getPossiblePositions() {\n        const positions = []\n        for (let i = 0; i < 26; i++) {\n            positions.push({ id: i, name: i })\n        }\n        return positions\n    }\n\n    onEmployeeChange = (employee, member, index) => {\n        this.props.dispatch(change(`deskForm`, `employees[${index}].identifier`, (employee && employee.identifier) || ''))\n    }\n\n    onEquipmentChange = (equipment, member, index) => {\n        this.props.dispatch(change(`deskForm`, `equipments[${index}].type`, (equipment && equipment.type) || ''))\n    }\n\n    render() {\n\n        const { rooms, handleSubmit, submitLabel, readOnly, getOfficeData, officeData, showCreate, showUpdate, equipments, employees, idSelected } = this.props\n\n        const functionShow = submitLabel === 'Create' ? showCreate : showUpdate\n\n        return (\n            <form role='form' onSubmit={handleSubmit}>\n                <div className='box-body'>\n                    <Field name='roomId' label='Room' cols='12 6'\n                        component={Select} readOnly={readOnly}\n                        options={rooms} optionValue='id' optionLabel='name' autoFocus={true}\n                        inputOnChange={getOfficeData} />\n                    <Field name='chairDirection' label='Chair direction' cols='12 2'\n                        component={SelectWithIcon} icon=\"compass\" readOnly={readOnly}\n                        options={this.getPossibleDirections()} optionValue='id' optionLabel='name' />\n                    <Field name='x' label='X position' cols='12 2'\n                        component={SelectWithIcon} icon=\"map-marker\" readOnly={readOnly}\n                        options={this.getPossiblePositions()} optionValue='id' optionLabel='name' />\n                    <Field name='y' label='Y position' cols='12 2'\n                        component={SelectWithIcon} icon=\"map-marker\" readOnly={readOnly}\n                        options={this.getPossiblePositions()} optionValue='id' optionLabel='name' />\n\n                    <EmployeeList id=\"employeeList\" cols='12 6' list={employees} readOnly={readOnly}\n                        field='employees' legend='Employee' icon='user-plus' onSelected={this.onEmployeeChange} />\n\n                    <EquipmentList cols='12 6' list={equipments} readOnly={readOnly}\n                        field='equipments' legend='Equipments' icon='laptop' onSelected={this.onEquipmentChange} />\n\n                </div>\n                <div className='box-footer text-right'>\n                    <button type='submit' className={`btn btn-${this.props.submitClass}`}>\n                        {this.props.submitLabel}\n                    </button>\n                    <button type='button' className='btn btn-default'\n                        onClick={this.props.init}>{this.props.cancelLabel}</button>\n                </div>\n                <If test={officeData && officeData.length > 0}>\n                    <div className='box-footer'>\n                        <Grid key=\"key_office_data\" cols='12'>\n                            <div className=\"box_ box-default\">\n                                <div className=\"box-header with-border\">\n                                    <i className=\"fa fa-building-o\"></i>\n                                    <h3 className=\"box-title\">MY OFFICE - {officeData && officeData[0] && officeData[0].room}</h3>\n                                </div>\n                                <div className=\"box-body\">\n                                    <OfficeMap\n                                        id={officeData && officeData[0] && officeData[0].room}\n                                        data={officeData}\n                                        horizontalSize={6}\n                                        verticalSize={6}\n                                        onSelect={desk => this.props.prepareToShow(desk, functionShow)}\n                                        onMove={desk => this.props.update(desk, functionShow)}\n                                        editMode={true}\n                                        showNavigator={true}\n                                        fields={['type', 'patrimony', 'specification']} \n                                        idSelected={idSelected} />\n                                </div>\n                            </div>\n                        </Grid >\n                    </div>\n                </If>\n            </form>\n        )\n    }\n}\n\nDeskForm = reduxForm({ form: 'deskForm', destroyOnUnmount: false })(DeskForm)\nconst selector = formValueSelector('deskForm')\n\nconst mapStateToProps = state => ({\n    rooms: state.room.list,\n    officeData: state.desk.officeData,\n    equipments: state.equipment.list,\n    employees: state.employee.list,\n    idSelected: state.desk.idSelected\n})\nconst mapDispatchToProps = dispatch => bindActionCreators({ init, getRooms, getEmployees, getEquipments, getOfficeData, prepareToShow, showCreate, showUpdate, update }, dispatch)\nexport default connect(mapStateToProps, mapDispatchToProps)(DeskForm)"]},"metadata":{},"sourceType":"module"}