{"ast":null,"code":"import { toastr } from 'react-redux-toastr';\nimport axios from 'axios';\nimport consts from '../consts';\nexport function login(values) {\n  return submit(values, \"\".concat(consts.OAPI_URL, \"/signin\"));\n}\nexport function signup(values) {\n  return submit(values, \"\".concat(consts.OAPI_URL, \"/signup\"));\n}\n\nfunction submit(values, url) {\n  return function (dispatch) {\n    axios.post(url, values).then(function (resp) {\n      dispatch({\n        type: 'USER_FETCHED',\n        payload: resp.data\n      });\n    }).catch(function (e) {\n      if (!e.response) {\n        toastr.error('Ошибка', 'Сервер или база данных недоступны!');\n      } else {\n        e.response.data.errors.forEach(function (error) {\n          return toastr.error('Ошибка', error);\n        });\n      }\n    });\n  };\n}\n\nexport function logout() {\n  return {\n    type: 'TOKEN_VALIDATED',\n    payload: false\n  };\n}\nexport function validateToken(token) {\n  return function (dispatch) {\n    if (token) {\n      axios.post(\"\".concat(consts.OAPI_URL, \"/validateToken\"), {\n        token: token\n      }).then(function (resp) {\n        dispatch({\n          type: 'TOKEN_VALIDATED',\n          payload: resp.data.valid\n        });\n      }).catch(function (e) {\n        return dispatch({\n          type: 'TOKEN_VALIDATED',\n          payload: false\n        });\n      });\n    } else {\n      dispatch({\n        type: 'TOKEN_VALIDATED',\n        payload: false\n      });\n    }\n  };\n}","map":{"version":3,"sources":["F:\\Scripts\\my-office-master\\frontend\\src\\auth\\authActions.js"],"names":["toastr","axios","consts","login","values","submit","OAPI_URL","signup","url","dispatch","post","then","resp","type","payload","data","catch","e","response","error","errors","forEach","logout","validateToken","token","valid"],"mappings":"AAAA,SAASA,MAAT,QAAuB,oBAAvB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AAEA,OAAO,SAASC,KAAT,CAAeC,MAAf,EAAuB;AAC1B,SAAOC,MAAM,CAACD,MAAD,YAAYF,MAAM,CAACI,QAAnB,aAAb;AACH;AAED,OAAO,SAASC,MAAT,CAAgBH,MAAhB,EAAwB;AAC3B,SAAOC,MAAM,CAACD,MAAD,YAAYF,MAAM,CAACI,QAAnB,aAAb;AACH;;AAED,SAASD,MAAT,CAAgBD,MAAhB,EAAwBI,GAAxB,EAA6B;AACzB,SAAO,UAAAC,QAAQ,EAAI;AACfR,IAAAA,KAAK,CAACS,IAAN,CAAWF,GAAX,EAAgBJ,MAAhB,EACKO,IADL,CACU,UAAAC,IAAI,EAAI;AACVH,MAAAA,QAAQ,CAAC;AAAEI,QAAAA,IAAI,EAAE,cAAR;AAAwBC,QAAAA,OAAO,EAAEF,IAAI,CAACG;AAAtC,OAAD,CAAR;AACH,KAHL,EAIKC,KAJL,CAIW,UAAAC,CAAC,EAAI;AACR,UAAI,CAACA,CAAC,CAACC,QAAP,EAAiB;AACblB,QAAAA,MAAM,CAACmB,KAAP,CAAa,QAAb,EAAuB,oCAAvB;AACH,OAFD,MAEO;AACHF,QAAAA,CAAC,CAACC,QAAF,CAAWH,IAAX,CAAgBK,MAAhB,CAAuBC,OAAvB,CACI,UAAAF,KAAK;AAAA,iBAAInB,MAAM,CAACmB,KAAP,CAAa,QAAb,EAAuBA,KAAvB,CAAJ;AAAA,SADT;AAGH;AACJ,KAZL;AAaH,GAdD;AAeH;;AAED,OAAO,SAASG,MAAT,GAAkB;AACrB,SAAO;AAAET,IAAAA,IAAI,EAAE,iBAAR;AAA2BC,IAAAA,OAAO,EAAE;AAApC,GAAP;AACH;AAED,OAAO,SAASS,aAAT,CAAuBC,KAAvB,EAA8B;AACjC,SAAO,UAAAf,QAAQ,EAAI;AACf,QAAIe,KAAJ,EAAW;AACPvB,MAAAA,KAAK,CAACS,IAAN,WAAcR,MAAM,CAACI,QAArB,qBAA+C;AAAEkB,QAAAA,KAAK,EAALA;AAAF,OAA/C,EACKb,IADL,CACU,UAAAC,IAAI,EAAI;AACVH,QAAAA,QAAQ,CAAC;AAAEI,UAAAA,IAAI,EAAE,iBAAR;AAA2BC,UAAAA,OAAO,EAAEF,IAAI,CAACG,IAAL,CAAUU;AAA9C,SAAD,CAAR;AACH,OAHL,EAIKT,KAJL,CAIW,UAAAC,CAAC;AAAA,eAAIR,QAAQ,CAAC;AAAEI,UAAAA,IAAI,EAAE,iBAAR;AAA2BC,UAAAA,OAAO,EAAE;AAApC,SAAD,CAAZ;AAAA,OAJZ;AAKH,KAND,MAMO;AACHL,MAAAA,QAAQ,CAAC;AAAEI,QAAAA,IAAI,EAAE,iBAAR;AAA2BC,QAAAA,OAAO,EAAE;AAApC,OAAD,CAAR;AACH;AACJ,GAVD;AAWH","sourcesContent":["import { toastr } from 'react-redux-toastr'\nimport axios from 'axios'\nimport consts from '../consts'\n\nexport function login(values) {\n    return submit(values, `${consts.OAPI_URL}/signin`)\n}\n\nexport function signup(values) {\n    return submit(values, `${consts.OAPI_URL}/signup`)\n}\n\nfunction submit(values, url) {\n    return dispatch => {\n        axios.post(url, values)\n            .then(resp => {\n                dispatch({ type: 'USER_FETCHED', payload: resp.data })\n            })\n            .catch(e => {\n                if (!e.response) {\n                    toastr.error('Ошибка', 'Сервер или база данных недоступны!')\n                } else {\n                    e.response.data.errors.forEach(\n                        error => toastr.error('Ошибка', error)\n                    )\n                }\n            })\n    }\n}\n\nexport function logout() {\n    return { type: 'TOKEN_VALIDATED', payload: false }\n}\n\nexport function validateToken(token) {\n    return dispatch => {\n        if (token) {\n            axios.post(`${consts.OAPI_URL}/validateToken`, { token })\n                .then(resp => {\n                    dispatch({ type: 'TOKEN_VALIDATED', payload: resp.data.valid })\n                })\n                .catch(e => dispatch({ type: 'TOKEN_VALIDATED', payload: false }))\n        } else {\n            dispatch({ type: 'TOKEN_VALIDATED', payload: false })\n        }\n    }\n}\n"]},"metadata":{},"sourceType":"module"}