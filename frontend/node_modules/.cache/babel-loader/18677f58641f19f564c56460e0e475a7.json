{"ast":null,"code":"import _classCallCheck from \"F:\\\\Scripts\\\\my-office-master\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"F:\\\\Scripts\\\\my-office-master\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"F:\\\\Scripts\\\\my-office-master\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"F:\\\\Scripts\\\\my-office-master\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"F:\\\\Scripts\\\\my-office-master\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"F:\\\\Scripts\\\\my-office-master\\\\frontend\\\\src\\\\equipment\\\\equipmentList.jsx\";\nimport React, { Component } from 'react';\nimport { bindActionCreators } from 'redux';\nimport { connect } from 'react-redux';\nimport { getList, prepareToShow, showUpdate, showDelete } from './equipmentActions';\n\nvar EquipmentList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(EquipmentList, _Component);\n\n  function EquipmentList() {\n    _classCallCheck(this, EquipmentList);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(EquipmentList).apply(this, arguments));\n  }\n\n  _createClass(EquipmentList, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.props.getList();\n    }\n  }, {\n    key: \"getFormatedDate\",\n    value: function getFormatedDate(isoDate) {\n      var options = {\n        year: 'numeric',\n        month: 'long',\n        day: 'numeric'\n      };\n      var date = new Date(isoDate);\n      return \"\".concat(date.toLocaleDateString('en-US', options), \" at \").concat(date.toLocaleTimeString('en-US'));\n    }\n  }, {\n    key: \"renderRows\",\n    value: function renderRows() {\n      var _this = this;\n\n      var list = this.props.list || [];\n      return list.map(function (equipment) {\n        return React.createElement(\"tr\", {\n          key: equipment.id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 22\n          },\n          __self: this\n        }, React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23\n          },\n          __self: this\n        }, equipment.patrimony), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 24\n          },\n          __self: this\n        }, equipment.type), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 25\n          },\n          __self: this\n        }, equipment.date ? _this.getFormatedDate(equipment.date) : '-'), React.createElement(\"td\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 26\n          },\n          __self: this\n        }, React.createElement(\"button\", {\n          className: \"btn btn-default\",\n          onClick: function onClick() {\n            return _this.props.prepareToShow(equipment.id, showUpdate);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 27\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"icon ion-md-create\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 28\n          },\n          __self: this\n        })), React.createElement(\"button\", {\n          className: \"btn btn-danger\",\n          onClick: function onClick() {\n            return _this.props.prepareToShow(equipment.id, showDelete);\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 30\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"icon ion-md-trash\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31\n          },\n          __self: this\n        }))));\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 40\n        },\n        __self: this\n      }, React.createElement(\"table\", {\n        className: \"table\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(\"thead\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, \"Patrimony\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, \"Type\"), React.createElement(\"th\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46\n        },\n        __self: this\n      }, \"Created at\"), React.createElement(\"th\", {\n        className: \"table-actions\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }, \"Actions\"))), React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, this.renderRows())));\n    }\n  }]);\n\n  return EquipmentList;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    list: state.equipment.list\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    getList: getList,\n    prepareToShow: prepareToShow,\n    showUpdate: showUpdate,\n    showDelete: showDelete\n  }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(EquipmentList);","map":{"version":3,"sources":["F:\\Scripts\\my-office-master\\frontend\\src\\equipment\\equipmentList.jsx"],"names":["React","Component","bindActionCreators","connect","getList","prepareToShow","showUpdate","showDelete","EquipmentList","props","isoDate","options","year","month","day","date","Date","toLocaleDateString","toLocaleTimeString","list","map","equipment","id","patrimony","type","getFormatedDate","renderRows","mapStateToProps","state","mapDispatchToProps","dispatch"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,EAAkBC,aAAlB,EAAiCC,UAAjC,EAA6CC,UAA7C,QAA+D,oBAA/D;;IAEMC,a;;;;;;;;;;;;;yCAEmB;AACjB,WAAKC,KAAL,CAAWL,OAAX;AACH;;;oCAEeM,O,EAAS;AACrB,UAAMC,OAAO,GAAG;AAAEC,QAAAA,IAAI,EAAE,SAAR;AAAmBC,QAAAA,KAAK,EAAE,MAA1B;AAAkCC,QAAAA,GAAG,EAAE;AAAvC,OAAhB;AAEA,UAAMC,IAAI,GAAG,IAAIC,IAAJ,CAASN,OAAT,CAAb;AACA,uBAAUK,IAAI,CAACE,kBAAL,CAAwB,OAAxB,EAAiCN,OAAjC,CAAV,iBAA0DI,IAAI,CAACG,kBAAL,CAAwB,OAAxB,CAA1D;AACH;;;iCAEY;AAAA;;AACT,UAAMC,IAAI,GAAG,KAAKV,KAAL,CAAWU,IAAX,IAAmB,EAAhC;AACA,aAAOA,IAAI,CAACC,GAAL,CAAS,UAAAC,SAAS;AAAA,eACrB;AAAI,UAAA,GAAG,EAAEA,SAAS,CAACC,EAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKD,SAAS,CAACE,SAAf,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKF,SAAS,CAACG,IAAf,CAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKH,SAAS,CAACN,IAAV,GAAiB,KAAI,CAACU,eAAL,CAAqBJ,SAAS,CAACN,IAA/B,CAAjB,GAAwD,GAA7D,CAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAQ,UAAA,SAAS,EAAC,iBAAlB;AAAoC,UAAA,OAAO,EAAE;AAAA,mBAAM,KAAI,CAACN,KAAL,CAAWJ,aAAX,CAAyBgB,SAAS,CAACC,EAAnC,EAAuChB,UAAvC,CAAN;AAAA,WAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAG,UAAA,SAAS,EAAC,oBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,CADJ,EAII;AAAQ,UAAA,SAAS,EAAC,gBAAlB;AAAmC,UAAA,OAAO,EAAE;AAAA,mBAAM,KAAI,CAACG,KAAL,CAAWJ,aAAX,CAAyBgB,SAAS,CAACC,EAAnC,EAAuCf,UAAvC,CAAN;AAAA,WAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI;AAAG,UAAA,SAAS,EAAC,mBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ,CAJJ,CAJJ,CADqB;AAAA,OAAlB,CAAP;AAeH;;;6BAEQ;AACL,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAO,QAAA,SAAS,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHJ,EAII;AAAI,QAAA,SAAS,EAAC,eAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAJJ,CADJ,CADJ,EASI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKmB,UAAL,EADL,CATJ,CADJ,CADJ;AAiBH;;;;EAlDuBzB,S;;AAqD5B,IAAM0B,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAK;AAACT,IAAAA,IAAI,EAAES,KAAK,CAACP,SAAN,CAAgBF;AAAvB,GAAL;AAAA,CAA7B;;AACA,IAAMU,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ;AAAA,SAAI5B,kBAAkB,CAAC;AAACE,IAAAA,OAAO,EAAPA,OAAD;AAAUC,IAAAA,aAAa,EAAbA,aAAV;AAAyBC,IAAAA,UAAU,EAAVA,UAAzB;AAAqCC,IAAAA,UAAU,EAAVA;AAArC,GAAD,EAAmDuB,QAAnD,CAAtB;AAAA,CAAnC;;AACA,eAAe3B,OAAO,CAACwB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6CrB,aAA7C,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport { bindActionCreators } from 'redux'\nimport { connect } from 'react-redux'\nimport { getList, prepareToShow, showUpdate, showDelete } from './equipmentActions'\n\nclass EquipmentList extends Component {\n\n    componentWillMount() {\n        this.props.getList()\n    }\n    \n    getFormatedDate(isoDate) {\n        const options = { year: 'numeric', month: 'long', day: 'numeric' }\n        \n        const date = new Date(isoDate)\n        return `${date.toLocaleDateString('en-US', options)} at ${date.toLocaleTimeString('en-US')}`\n    }\n\n    renderRows() {\n        const list = this.props.list || []\n        return list.map(equipment => (\n            <tr key={equipment.id}>\n                <td>{equipment.patrimony}</td>\n                <td>{equipment.type}</td>\n                <td>{equipment.date ? this.getFormatedDate(equipment.date) : '-'}</td>\n                <td>\n                    <button className='btn btn-default' onClick={() => this.props.prepareToShow(equipment.id, showUpdate)}>\n                        <i className='icon ion-md-create'></i>\n                    </button>\n                    <button className='btn btn-danger' onClick={() => this.props.prepareToShow(equipment.id, showDelete)}>\n                        <i className='icon ion-md-trash'></i>\n                    </button>\n                </td>\n            </tr>\n        ))\n    }\n\n    render() {\n        return (\n            <div>\n                <table className='table'>\n                    <thead>\n                        <tr>\n                            <th>Patrimony</th>\n                            <th>Type</th>\n                            <th>Created at</th>\n                            <th className='table-actions'>Actions</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {this.renderRows()}\n                    </tbody>\n                </table>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({list: state.equipment.list})\nconst mapDispatchToProps = dispatch => bindActionCreators({getList, prepareToShow, showUpdate, showDelete}, dispatch)\nexport default connect(mapStateToProps, mapDispatchToProps)(EquipmentList)"]},"metadata":{},"sourceType":"module"}