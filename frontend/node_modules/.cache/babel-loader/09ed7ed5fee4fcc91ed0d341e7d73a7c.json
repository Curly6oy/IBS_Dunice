{"ast":null,"code":"import _objectSpread from \"F:\\\\Scripts\\\\my-office-master\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"F:\\\\Scripts\\\\my-office-master\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"F:\\\\Scripts\\\\my-office-master\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"F:\\\\Scripts\\\\my-office-master\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"F:\\\\Scripts\\\\my-office-master\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"F:\\\\Scripts\\\\my-office-master\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"F:\\\\Scripts\\\\my-office-master\\\\frontend\\\\src\\\\common\\\\form\\\\select.jsx\";\nimport React, { Component } from 'react';\nimport Grid from '../layout/grid';\nimport ReactSelect from 'react-select';\nimport If from '../operator/if';\n\nvar Select =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Select, _Component);\n\n  function Select() {\n    _classCallCheck(this, Select);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Select).apply(this, arguments));\n  }\n\n  _createClass(Select, [{\n    key: \"handleChange\",\n    value: function handleChange(selectedOption) {\n      var _this$props = this.props,\n          input = _this$props.input,\n          optionValue = _this$props.optionValue,\n          inputOnChange = _this$props.inputOnChange;\n\n      if (Array.isArray(selectedOption)) {\n        var values = [];\n        selectedOption.forEach(function (option) {\n          return values.push(option[optionValue || 'value']);\n        });\n        input.onChange(values);\n\n        if (inputOnChange) {\n          inputOnChange(values);\n        }\n      } else {\n        input.onChange(selectedOption[optionValue || 'value']);\n\n        if (inputOnChange) {\n          inputOnChange(selectedOption[optionValue || 'value']);\n        }\n      }\n    }\n  }, {\n    key: \"getCustomStyles\",\n    value: function getCustomStyles() {\n      var input = this.props.input;\n      var customStyles = {\n        'min-height': 34,\n        height: 34,\n        'border-radius': 0,\n        '&:link': {\n          border: '1px solid #3c8dbc',\n          lineHeight: 1.42857143\n        },\n        '&:visited': {\n          border: '1px solid #3c8dbc',\n          lineHeight: 1.42857143\n        },\n        '&:hover': {\n          border: '1px solid #3c8dbc',\n          lineHeight: 1.42857143\n        },\n        '&:active': {\n          border: '1px solid #3c8dbc',\n          lineHeight: 1.42857143\n        },\n        '&:focus    ': {\n          border: '1px solid #3c8dbc',\n          lineHeight: 1.42857143\n        },\n        '&:focus-visible': {\n          border: '1px solid #3c8dbc',\n          lineHeight: 1.42857143\n        },\n        '&:focus-within ': {\n          border: '1px solid #3c8dbc',\n          lineHeight: 1.42857143\n        },\n        '&:enabled ': {\n          border: '1px solid #3c8dbc',\n          lineHeight: 1.42857143\n        }\n      };\n\n      if (Array.isArray(input.value) && input.value.length > 1) {\n        delete customStyles.height;\n      }\n\n      return {\n        option: function option(provided) {\n          return _objectSpread({}, provided);\n        },\n        control: function control(provided) {\n          return _objectSpread({}, provided, customStyles);\n        },\n        singleValue: function singleValue(provided) {\n          return _objectSpread({}, provided);\n        }\n      };\n    }\n  }, {\n    key: \"getValue\",\n    value: function getValue() {\n      var _this$props2 = this.props,\n          options = _this$props2.options,\n          optionValue = _this$props2.optionValue,\n          input = _this$props2.input;\n\n      if (Array.isArray(input.value)) {\n        return options && options.filter(function (opt) {\n          for (var i = 0; i < input.value.length; i++) {\n            if (input.value[i] == opt[optionValue || 'value']) {\n              return true;\n            }\n          }\n\n          return false;\n        });\n      } else {\n        return options && options.filter(function (opt) {\n          return opt[optionValue || 'value'] == input.value;\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this = this;\n\n      var _this$props3 = this.props,\n          cols = _this$props3.cols,\n          name = _this$props3.name,\n          label = _this$props3.label,\n          optionValue = _this$props3.optionValue,\n          optionLabel = _this$props3.optionLabel,\n          autoFocus = _this$props3.autoFocus,\n          readOnly = _this$props3.readOnly,\n          onlyCombo = _this$props3.onlyCombo;\n      return React.createElement(React.Fragment, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81\n        },\n        __self: this\n      }, React.createElement(If, {\n        test: onlyCombo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(ReactSelect, Object.assign({}, this.props, {\n        styles: this.getCustomStyles(),\n        onChange: function onChange(e) {\n          return _this.handleChange(e);\n        },\n        getOptionValue: function getOptionValue(opt) {\n          return opt[optionValue || 'value'];\n        },\n        getOptionLabel: function getOptionLabel(opt) {\n          return opt[optionLabel || 'label'];\n        },\n        value: this.getValue(),\n        autoFocus: autoFocus,\n        isDisabled: readOnly,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }))), React.createElement(If, {\n        test: !onlyCombo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 90\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        cols: cols,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 92\n        },\n        __self: this\n      }, React.createElement(If, {\n        test: label,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: name,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93\n        },\n        __self: this\n      }, label)), React.createElement(ReactSelect, Object.assign({}, this.props, {\n        styles: this.getCustomStyles(),\n        onChange: function onChange(e) {\n          return _this.handleChange(e);\n        },\n        getOptionValue: function getOptionValue(opt) {\n          return opt[optionValue || 'value'];\n        },\n        getOptionLabel: function getOptionLabel(opt) {\n          return opt[optionLabel || 'label'];\n        },\n        value: this.getValue(),\n        autoFocus: autoFocus,\n        isDisabled: readOnly,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }))))));\n    }\n  }]);\n\n  return Select;\n}(Component);\n\nexport { Select as default };","map":{"version":3,"sources":["F:\\Scripts\\my-office-master\\frontend\\src\\common\\form\\select.jsx"],"names":["React","Component","Grid","ReactSelect","If","Select","selectedOption","props","input","optionValue","inputOnChange","Array","isArray","values","forEach","option","push","onChange","customStyles","height","border","lineHeight","value","length","provided","control","singleValue","options","filter","opt","i","cols","name","label","optionLabel","autoFocus","readOnly","onlyCombo","getCustomStyles","e","handleChange","getValue"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Grid from '../layout/grid'\nimport ReactSelect from 'react-select';\nimport If from '../operator/if'\n\nexport default class Select extends Component {\n\n    handleChange(selectedOption) {\n        const { input, optionValue, inputOnChange } = this.props\n\n        if (Array.isArray(selectedOption)) {\n            let values = []\n            selectedOption.forEach(option => values.push(option[optionValue || 'value']))\n\n            input.onChange(values)\n            if (inputOnChange) {\n                inputOnChange(values)\n            }\n        } else {\n            input.onChange(selectedOption[optionValue || 'value'])\n            if (inputOnChange) {\n                inputOnChange(selectedOption[optionValue || 'value'])\n            }\n        }\n    }\n\n    getCustomStyles() {\n        const { input } = this.props\n\n        let customStyles = {\n            'min-height': 34,\n            height: 34,\n            'border-radius': 0,\n            '&:link': { border: '1px solid #3c8dbc', lineHeight: 1.42857143 },\n            '&:visited': { border: '1px solid #3c8dbc', lineHeight: 1.42857143 },\n            '&:hover': { border: '1px solid #3c8dbc', lineHeight: 1.42857143 },\n            '&:active': { border: '1px solid #3c8dbc', lineHeight: 1.42857143 },\n            '&:focus    ': { border: '1px solid #3c8dbc', lineHeight: 1.42857143 },\n            '&:focus-visible': { border: '1px solid #3c8dbc', lineHeight: 1.42857143 },\n            '&:focus-within ': { border: '1px solid #3c8dbc', lineHeight: 1.42857143 },\n            '&:enabled ': { border: '1px solid #3c8dbc', lineHeight: 1.42857143 },\n        }\n\n        if (Array.isArray(input.value) && input.value.length > 1) {\n            delete customStyles.height\n        }\n\n        return {\n            option: provided => ({\n                ...provided,\n            }),\n            control: provided => ({\n                ...provided, ...customStyles\n            }),\n            singleValue: provided => ({\n                ...provided,\n            })\n        }\n    }\n\n    getValue() {\n        const { options, optionValue, input } = this.props\n\n        if (Array.isArray(input.value)) {\n            return options && options.filter(opt => {\n                for (let i = 0; i < input.value.length; i++) {\n                    if (input.value[i] == opt[optionValue || 'value']) {\n                        return true\n                    }\n                }\n                return false\n            })\n        } else {\n            return options && options.filter(opt => opt[optionValue || 'value'] == input.value)\n        }\n    }\n\n    render() {\n        const { cols, name, label, optionValue, optionLabel, autoFocus, readOnly, onlyCombo } = this.props\n        return (\n            <React.Fragment>\n                <If test={onlyCombo}>\n                    <ReactSelect {...this.props}\n                        styles={this.getCustomStyles()}\n                        onChange={e => this.handleChange(e)}\n                        getOptionValue={opt => opt[optionValue || 'value']}\n                        getOptionLabel={opt => opt[optionLabel || 'label']}\n                        value={this.getValue()} autoFocus={autoFocus} isDisabled={readOnly} />\n                </If>\n                <If test={!onlyCombo}>\n                    <Grid cols={cols}>\n                        <div className='form-group'>\n                            <If test={label}><label htmlFor={name}>{label}</label></If>\n                            <ReactSelect {...this.props}\n                                styles={this.getCustomStyles()}\n                                onChange={e => this.handleChange(e)}\n                                getOptionValue={opt => opt[optionValue || 'value']}\n                                getOptionLabel={opt => opt[optionLabel || 'label']}\n                                value={this.getValue()} autoFocus={autoFocus} isDisabled={readOnly} />\n                        </div>\n                    </Grid>\n                </If>\n            </React.Fragment>\n        )\n    }\n}"]},"metadata":{},"sourceType":"module"}