{"ast":null,"code":"import axios from 'axios';\nimport { toastr } from 'react-redux-toastr';\nimport { initialize } from 'redux-form';\nimport { showTabs, selectTab } from '../common/tab/tabActions';\nimport consts from '../consts';\nvar INITIAL_VALUES = {};\nexport function getList() {\n  var request = axios.get(\"\".concat(consts.API_URL, \"/rooms\"));\n  return {\n    type: 'ROOMS_FETCHED',\n    payload: request\n  };\n}\nexport var create = function create(room) {\n  return function (dispatch) {\n    axios.post('/api/rooms', room).then(function (resp) {\n      dispatch({\n        type: 'ROOM_CREATE',\n        payload: resp.data\n      });\n    }).catch(function (error) {\n      console.error(\"Ошибка при создании комнаты: \", error);\n    });\n  };\n};\nexport function update(values) {\n  return submit(values, 'put');\n}\nexport function remove(values) {\n  return submit(values, 'delete');\n}\n\nfunction submit(values, method) {\n  return function (dispatch) {\n    var id = values.id ? values.id : '';\n    axios[method](\"\".concat(consts.API_URL, \"/rooms/\").concat(id), values).then(function (resp) {\n      toastr.success('Успешно', 'Операция выполнена.');\n      dispatch(init());\n    }).catch(function (e) {\n      e.response.data.errors.forEach(function (error) {\n        return toastr.error('Ошибка', error);\n      });\n    });\n  };\n}\n\nexport function prepareToShow(roomId, callback) {\n  return function (dispatch) {\n    axios['get'](\"\".concat(consts.API_URL, \"/rooms/\").concat(roomId)).then(function (room) {\n      dispatch(callback(room.data));\n    }).catch(function (e) {\n      e.response.data.errors.forEach(function (error) {\n        return toastr.error('Ошибка', error);\n      });\n    });\n  };\n}\nexport function showUpdate(room) {\n  return [showTabs('tabUpdate'), selectTab('tabUpdate'), initialize('roomForm', room)];\n}\nexport function showDelete(room) {\n  return [showTabs('tabDelete'), selectTab('tabDelete'), initialize('roomForm', room)];\n}\nexport var init = function init() {\n  return function (dispatch) {\n    // Инициализация действий, например, загрузка списка комнат\n    axios.get('/api/rooms').then(function (resp) {\n      dispatch({\n        type: 'ROOM_LIST',\n        payload: resp.data\n      });\n    }).catch(function (error) {\n      console.error(\"Ошибка при загрузке комнат: \", error);\n    });\n  };\n};","map":{"version":3,"sources":["F:\\Scripts\\IBS_Dunice\\frontend\\src\\room\\roomActions.js"],"names":["axios","toastr","initialize","showTabs","selectTab","consts","INITIAL_VALUES","getList","request","get","API_URL","type","payload","create","room","dispatch","post","then","resp","data","catch","error","console","update","values","submit","remove","method","id","success","init","e","response","errors","forEach","prepareToShow","roomId","callback","showUpdate","showDelete"],"mappings":"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","sourcesContent":["import axios from 'axios'\nimport { toastr } from 'react-redux-toastr'\nimport { initialize } from 'redux-form'\nimport { showTabs, selectTab } from '../common/tab/tabActions'\nimport consts from '../consts'\n\nconst INITIAL_VALUES = {}\n\nexport function getList() {\n    const request = axios.get(`${consts.API_URL}/rooms`)\n    return {\n        type: 'ROOMS_FETCHED',\n        payload: request\n    }\n}\n\nexport const create = (room) => {\n    return dispatch => {\n        axios.post('/api/rooms', room)\n            .then(resp => {\n                dispatch({ type: 'ROOM_CREATE', payload: resp.data })\n            })\n            .catch(error => {\n                console.error(\"Ошибка при создании комнаты: \", error)\n            })\n    }\n}\nexport function update(values) {\n    return submit(values, 'put')\n}\n\nexport function remove(values) {\n    return submit(values, 'delete')\n}\n\nfunction submit(values, method) {\n    return dispatch => {\n        const id = values.id ? values.id : ''\n        axios[method](`${consts.API_URL}/rooms/${id}`, values)\n            .then(resp => {\n                toastr.success('Успешно', 'Операция выполнена.')\n                dispatch(init())\n            })\n            .catch(e => {\n                e.response.data.errors.forEach(error => toastr.error('Ошибка', error))\n            })\n    }\n}\n\nexport function prepareToShow(roomId, callback) {\n    return dispatch => {\n        axios['get'](`${consts.API_URL}/rooms/${roomId}`)\n            .then(room => { dispatch(callback(room.data)) })\n            .catch(e => {\n                e.response.data.errors.forEach(error => toastr.error('Ошибка', error))\n            })\n    }\n}\n\nexport function showUpdate(room) {\n    return [\n        showTabs('tabUpdate'),\n        selectTab('tabUpdate'),\n        initialize('roomForm', room)\n    ]\n}\n\nexport function showDelete(room) {\n    return [\n        showTabs('tabDelete'),\n        selectTab('tabDelete'),\n        initialize('roomForm', room)\n    ]\n}\n\nexport const init = () => {\n    return dispatch => {\n        // Инициализация действий, например, загрузка списка комнат\n        axios.get('/api/rooms')\n            .then(resp => {\n                dispatch({ type: 'ROOM_LIST', payload: resp.data })\n            })\n            .catch(error => {\n                console.error(\"Ошибка при загрузке комнат: \", error)\n            })\n    }\n}\n"]},"metadata":{},"sourceType":"module"}