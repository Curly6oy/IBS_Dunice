{"ast":null,"code":"import axios from 'axios';\nimport { toastr } from 'react-redux-toastr';\nimport { initialize } from 'redux-form';\nimport { showTabs, selectTab } from '../common/tab/tabActions';\nimport consts from '../consts';\nvar INITIAL_VALUES = {};\nexport function getList() {\n  var request = axios.get(\"\".concat(consts.API_URL, \"/rooms\"));\n  return {\n    type: 'ROOMS_FETCHED',\n    payload: request\n  };\n}\nexport function create(values) {\n  return submit(values, 'post');\n}\nexport function update(values) {\n  return submit(values, 'put');\n}\nexport function remove(values) {\n  return submit(values, 'delete');\n}\n\nfunction submit(values, method) {\n  return function (dispatch) {\n    var id = values.id ? values.id : '';\n    axios[method](\"\".concat(consts.API_URL, \"/rooms/\").concat(id), values).then(function (resp) {\n      toastr.success('Успешно', 'Операция выполнена.');\n      dispatch(init());\n    }).catch(function (e) {\n      console.error('Ошибка на сервере:', e.response); // Логирование ошибки\n\n      e.response.data.errors.forEach(function (error) {\n        return toastr.error('Ошибка', error);\n      });\n    });\n  };\n}\n\nexport function prepareToShow(roomId, callback) {\n  return function (dispatch) {\n    axios['get'](\"\".concat(consts.API_URL, \"/rooms/\").concat(roomId)).then(function (room) {\n      dispatch(callback(room.data));\n    }).catch(function (e) {\n      e.response.data.errors.forEach(function (error) {\n        return toastr.error('Ошибка', error);\n      });\n    });\n  };\n}\nexport function showUpdate(room) {\n  return [showTabs('tabUpdate'), selectTab('tabUpdate'), initialize('roomForm', room)];\n}\nexport function showDelete(room) {\n  return [showTabs('tabDelete'), selectTab('tabDelete'), initialize('roomForm', room)];\n}\nexport function init() {\n  return [showTabs('tabList', 'tabCreate'), selectTab('tabList'), getList(), initialize('roomForm', INITIAL_VALUES)];\n}","map":{"version":3,"sources":["F:\\Scripts\\IBS_Dunice\\frontend\\src\\room\\roomActions.js"],"names":["axios","toastr","initialize","showTabs","selectTab","consts","INITIAL_VALUES","getList","request","get","API_URL","type","payload","create","values","submit","update","remove","method","dispatch","id","then","resp","success","init","catch","e","console","error","response","data","errors","forEach","prepareToShow","roomId","callback","room","showUpdate","showDelete"],"mappings":"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","sourcesContent":["import axios from 'axios'\nimport { toastr } from 'react-redux-toastr'\nimport { initialize } from 'redux-form'\nimport { showTabs, selectTab } from '../common/tab/tabActions'\nimport consts from '../consts'\n\nconst INITIAL_VALUES = {}\n\nexport function getList() {\n    const request = axios.get(`${consts.API_URL}/rooms`)\n    return {\n        type: 'ROOMS_FETCHED',\n        payload: request\n    }\n}\n\nexport function create(values) {\n    return submit(values, 'post')\n}\n\nexport function update(values) {\n    return submit(values, 'put')\n}\n\nexport function remove(values) {\n    return submit(values, 'delete')\n}\n\nfunction submit(values, method) {\n    return dispatch => {\n        const id = values.id ? values.id : ''\n        axios[method](`${consts.API_URL}/rooms/${id}`, values)\n        .then(resp => {\n            toastr.success('Успешно', 'Операция выполнена.')\n            dispatch(init())\n        })\n        .catch(e => {\n            console.error('Ошибка на сервере:', e.response);  // Логирование ошибки\n            e.response.data.errors.forEach(error => toastr.error('Ошибка', error))\n        })\n    }\n}\n\nexport function prepareToShow(roomId, callback) {\n    return dispatch => {\n        axios['get'](`${consts.API_URL}/rooms/${roomId}`)\n            .then(room => { dispatch(callback(room.data)) })\n            .catch(e => {\n                e.response.data.errors.forEach(error => toastr.error('Ошибка', error))\n            })\n    }\n}\n\nexport function showUpdate(room) {\n    return [\n        showTabs('tabUpdate'),\n        selectTab('tabUpdate'),\n        initialize('roomForm', room)\n    ]\n}\n\nexport function showDelete(room) {\n    return [\n        showTabs('tabDelete'),\n        selectTab('tabDelete'),\n        initialize('roomForm', room)\n    ]\n}\n\nexport function init() {\n    return [\n        showTabs('tabList', 'tabCreate'),\n        selectTab('tabList'),\n        getList(),\n        initialize('roomForm', INITIAL_VALUES)\n    ]\n}\n"]},"metadata":{},"sourceType":"module"}