{"ast":null,"code":"import axios from 'axios';\nimport { toastr } from 'react-redux-toastr';\nimport { initialize } from 'redux-form';\nimport { showTabs, selectTab } from '../common/tab/tabActions';\nimport { getList as getEmployees } from '../employee/employeeActions';\nimport { getList as getEquipments } from '../equipment/equipmentActions';\nimport consts from '../consts';\nvar INITIAL_VALUES = {\n  rooms: [],\n  officeData: [],\n  equipments: [{}],\n  employees: [{}]\n};\nexport function getList() {\n  var request = axios.get(\"\".concat(consts.API_URL, \"/desks\"));\n  return {\n    type: 'DESKS_FETCHED',\n    payload: request\n  };\n}\nexport function getOfficeData(roomId) {\n  var request = {\n    data: []\n  };\n\n  if (roomId) {\n    request = axios.get(\"\".concat(consts.API_URL, \"/rooms/\").concat(roomId, \"/officeData\"));\n  }\n\n  return {\n    type: 'OFFICE_DATA_FETCHED',\n    payload: request\n  };\n}\nexport function create(values) {\n  return submit(values, 'post');\n}\nexport function update(values) {\n  return submit(values, 'put');\n}\nexport function remove(values) {\n  return submit(values, 'delete');\n}\nexport function selectId(id) {\n  return {\n    type: 'ID_SELECTED',\n    payload: id\n  };\n}\n\nfunction submit(values, method) {\n  return function (dispatch) {\n    var id = values.id ? values.id : '';\n    var roomId = values.roomId;\n    var isUpdate = method === 'put' && id;\n    axios[method](\"\".concat(consts.API_URL, \"/desks/\").concat(id), values).then(function (resp) {\n      toastr.success('Success', 'Successful operation.');\n      dispatch([getOfficeData(roomId), isUpdate ? initUpdate(values) : init()]);\n    }).catch(function (e) {\n      e.response.data.errors.forEach(function (error) {\n        return toastr.error('Error', error);\n      });\n    });\n  };\n}\n\nexport function initializeEmployee() {\n  return {\n    type: 'EMPLOYEE_INITIALIZED'\n  };\n}\nexport function prepareToShow(desk, callback) {\n  return function (dispatch) {\n    axios['get'](\"\".concat(consts.API_URL, \"/desks/\").concat(desk.id)).then(function (d) {\n      var deskToUpdate = d.data;\n\n      if (desk.x >= 0 && desk.y >= 0) {\n        deskToUpdate.x = desk.x;\n        deskToUpdate.y = desk.y;\n      }\n\n      dispatch(callback(deskToUpdate));\n    }).catch(function (e) {\n      e.response.data.errors.forEach(function (error) {\n        return toastr.error('Error', error);\n      });\n    });\n  };\n}\nexport function showUpdate(desk) {\n  return [selectId(desk.id), showTabs('tabUpdate'), selectTab('tabUpdate'), initialize('deskForm', desk), getOfficeData(desk.roomId)];\n}\nexport function showCreate(desk) {\n  delete desk.id;\n  return [showTabs('tabCreate', 'tabList'), selectTab('tabCreate'), initialize('deskForm', desk)];\n}\nexport function showDelete(desk) {\n  return [selectId(desk.id), showTabs('tabDelete'), selectTab('tabDelete'), initialize('deskForm', desk)];\n}\nexport function initUpdate(desk) {\n  return [selectId(desk.id), initialize('deskForm', desk), getOfficeData(desk.roomId)];\n}\nexport function init() {\n  return [selectId(undefined), showTabs('tabCreate', 'tabList'), selectTab('tabCreate'), getList(), getEmployees(), getEquipments(), initialize('deskForm', INITIAL_VALUES), getOfficeData(null)];\n}","map":{"version":3,"sources":["F:\\Scripts\\my-office-master\\frontend\\src\\desk\\deskActions.js"],"names":["axios","toastr","initialize","showTabs","selectTab","getList","getEmployees","getEquipments","consts","INITIAL_VALUES","rooms","officeData","equipments","employees","request","get","API_URL","type","payload","getOfficeData","roomId","data","create","values","submit","update","remove","selectId","id","method","dispatch","isUpdate","then","resp","success","initUpdate","init","catch","e","response","errors","forEach","error","initializeEmployee","prepareToShow","desk","callback","d","deskToUpdate","x","y","showUpdate","showCreate","showDelete","undefined"],"mappings":"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","sourcesContent":["import axios from 'axios'\nimport { toastr } from 'react-redux-toastr'\nimport { initialize } from 'redux-form'\nimport { showTabs, selectTab } from '../common/tab/tabActions'\nimport { getList as getEmployees } from '../employee/employeeActions'\nimport { getList as getEquipments } from '../equipment/equipmentActions'\nimport consts from '../consts'\n\nconst INITIAL_VALUES = { rooms: [], officeData: [], equipments: [{}], employees: [{}] }\n\nexport function getList() {\n    const request = axios.get(`${consts.API_URL}/desks`)\n    return {\n        type: 'DESKS_FETCHED',\n        payload: request\n    }\n}\n\nexport function getOfficeData(roomId) {\n    let request = {data: []}\n    if(roomId) {\n        request = axios.get(`${consts.API_URL}/rooms/${roomId}/officeData`)\n    }    \n    return {\n        type: 'OFFICE_DATA_FETCHED',\n        payload: request\n    }\n}\n\nexport function create(values) {\n    return submit(values, 'post')\n}\n\nexport function update(values) {\n    return submit(values, 'put')\n}\n\nexport function remove(values) {\n    return submit(values, 'delete')\n}\n\nexport function selectId(id) {\n    return {\n        type: 'ID_SELECTED',\n        payload: id\n    }\n}\n\nfunction submit(values, method) {\n    return dispatch => {\n        const id = values.id ? values.id : ''\n        const roomId = values.roomId\n        const isUpdate = method === 'put' && id \n\n        axios[method](`${consts.API_URL}/desks/${id}`, values)\n            .then(resp => {\n                toastr.success('Success', 'Successful operation.')\n                dispatch([getOfficeData(roomId), isUpdate ? initUpdate(values) : init()])\n            })\n            .catch(e => {\n                e.response.data.errors.forEach(error => toastr.error('Error', error))\n            })\n    }\n}\nexport function initializeEmployee() {\n    return {\n        type: 'EMPLOYEE_INITIALIZED'\n    }\n}\n\nexport function prepareToShow(desk, callback) {\n    return dispatch => {\n        axios['get'](`${consts.API_URL}/desks/${desk.id}`)\n            .then(d => {\n                const deskToUpdate = d.data\n                if (desk.x >= 0 && desk.y >= 0) {\n                    deskToUpdate.x = desk.x\n                    deskToUpdate.y = desk.y\n                }\n                dispatch(callback(deskToUpdate))\n            })\n            .catch(e => {\n                e.response.data.errors.forEach(error => toastr.error('Error', error))\n            })\n    }\n}\n\nexport function showUpdate(desk) {\n    return [\n        selectId(desk.id),\n        showTabs('tabUpdate'),\n        selectTab('tabUpdate'),\n        initialize('deskForm', desk),\n        getOfficeData(desk.roomId)\n    ]\n}\n\n\nexport function showCreate(desk) {\n    delete desk.id\n    return [\n        showTabs('tabCreate', 'tabList'),\n        selectTab('tabCreate'),\n        initialize('deskForm', desk),\n        //getOfficeData(desk.roomId)\n    ]\n}\n\nexport function showDelete(desk) {\n    return [\n        selectId(desk.id),\n        showTabs('tabDelete'),\n        selectTab('tabDelete'),\n        initialize('deskForm', desk)\n    ]\n}\n\nexport function initUpdate(desk) {\n    return [\n        selectId(desk.id),\n        initialize('deskForm', desk),\n        getOfficeData(desk.roomId)\n    ]\n}\n\nexport function init() {\n    return [\n        selectId(undefined),\n        showTabs('tabCreate', 'tabList'),\n        selectTab('tabCreate'),\n        getList(),\n        getEmployees(),\n        getEquipments(),\n        initialize('deskForm', INITIAL_VALUES),\n        getOfficeData(null)\n    ]\n}"]},"metadata":{},"sourceType":"module"}