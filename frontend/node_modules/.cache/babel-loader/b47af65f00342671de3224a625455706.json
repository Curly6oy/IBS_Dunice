{"ast":null,"code":"import axios from 'axios';\nimport { toastr } from 'react-redux-toastr';\nimport { initialize } from 'redux-form';\nimport { showTabs, selectTab } from '../common/tab/tabActions';\nimport consts from '../consts';\nvar INITIAL_VALUES = {\n  name: '',\n  parentId: undefined,\n  list: [],\n  employees: [{}]\n};\nexport function getList() {\n  var request = axios.get(\"\".concat(consts.API_URL, \"/employees\"));\n  request.then(function (response) {\n    return console.log('Ответ API /employees:', response.data);\n  }).catch(function (error) {\n    return console.error('Ошибка API /employees:', error);\n  });\n  return {\n    type: 'EMPLOYEES_FETCHED',\n    payload: request\n  };\n}\nexport function create(values) {\n  return submit(values, 'post');\n}\nexport function update(values) {\n  return submit(values, 'put');\n}\nexport function remove(values) {\n  return submit(values, 'delete');\n}\n\nfunction submit(values, method) {\n  return function (dispatch) {\n    var id = values.id ? values.id : '';\n    axios[method](\"\".concat(consts.API_URL, \"/employees/\").concat(id), values).then(function (resp) {\n      toastr.success('Success', 'Successful operation.');\n      dispatch(init());\n    }).catch(function (e) {\n      e.response.data.errors.forEach(function (error) {\n        return toastr.error('Error', error);\n      });\n    });\n  };\n}\n\nexport function showUpdate(employee) {\n  return [showTabs('tabUpdate'), selectTab('tabUpdate'), initialize('employeeForm', employee)];\n}\nexport function showDelete(employee) {\n  return [showTabs('tabDelete'), selectTab('tabDelete'), initialize('employeeForm', employee)];\n}\nexport function init() {\n  return [showTabs('tabList', 'tabCreate'), selectTab('tabList'), getList(), initialize('employeeForm', INITIAL_VALUES)];\n}","map":{"version":3,"sources":["F:\\Scripts\\my-office-master\\frontend\\src\\employee\\employeeActions.js"],"names":["axios","toastr","initialize","showTabs","selectTab","consts","INITIAL_VALUES","name","parentId","undefined","list","employees","getList","request","get","API_URL","then","response","console","log","data","catch","error","type","payload","create","values","submit","update","remove","method","dispatch","id","resp","success","init","e","errors","forEach","showUpdate","employee","showDelete"],"mappings":"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","sourcesContent":["import axios from 'axios'\nimport { toastr } from 'react-redux-toastr'\nimport { initialize } from 'redux-form'\nimport { showTabs, selectTab } from '../common/tab/tabActions'\nimport consts from '../consts'\n\nconst INITIAL_VALUES = {name: '', parentId: undefined, list: [], employees: [{}]}\n\nexport function getList() {\n    const request = axios.get(`${consts.API_URL}/employees`);\n    request\n        .then(response => console.log('Ответ API /employees:', response.data))\n        .catch(error => console.error('Ошибка API /employees:', error));\n\n    return {\n        type: 'EMPLOYEES_FETCHED',\n        payload: request\n    };\n}\n\nexport function create(values) {\n    return submit(values, 'post')\n}\n\nexport function update(values) {\n    return submit(values, 'put')\n}\n\nexport function remove(values) {\n    return submit(values, 'delete')\n}\n\nfunction submit(values, method) {\n    return dispatch => {\n        const id = values.id ? values.id : ''\n        axios[method](`${consts.API_URL}/employees/${id}`, values)\n            .then(resp => {\n                toastr.success('Success', 'Successful operation.')\n                dispatch(init())\n            })\n            .catch(e => {\n                e.response.data.errors.forEach(error => toastr.error('Error', error))\n            })\n    }\n}\n\nexport function showUpdate(employee) {\n    return [ \n        showTabs('tabUpdate'),\n        selectTab('tabUpdate'),        \n        initialize('employeeForm', employee),\n    ]\n}\n\nexport function showDelete(employee) {\n    return [ \n        showTabs('tabDelete'),\n        selectTab('tabDelete'),\n        initialize('employeeForm', employee)\n    ]\n}\n\nexport function init() {\n    return [\n        showTabs('tabList', 'tabCreate'),\n        selectTab('tabList'),\n        getList(),\n        initialize('employeeForm', INITIAL_VALUES)\n    ]\n}\n"]},"metadata":{},"sourceType":"module"}