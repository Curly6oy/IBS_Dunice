{"ast":null,"code":"import _classCallCheck from \"F:\\\\Scripts\\\\IBS_Dunice\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"F:\\\\Scripts\\\\IBS_Dunice\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"F:\\\\Scripts\\\\IBS_Dunice\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"F:\\\\Scripts\\\\IBS_Dunice\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"F:\\\\Scripts\\\\IBS_Dunice\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"F:\\\\Scripts\\\\IBS_Dunice\\\\frontend\\\\src\\\\dashboard\\\\dashboard.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { getSummary } from './dashboardActions';\nimport ContentHeader from '../common/template/contentHeader';\nimport Content from '../common/template/content';\nimport InfoBox from '../common/widget/infoBox';\nimport OfficeMap from 'office-map';\nimport Grid from '../common/layout/grid';\nimport Row from '../common/layout/row';\nimport { getList as getEmployees } from '../employee/employeeActions';\n\nvar Dashboard =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Dashboard, _Component);\n\n  function Dashboard() {\n    _classCallCheck(this, Dashboard);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Dashboard).apply(this, arguments));\n  }\n\n  _createClass(Dashboard, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.props.getSummary();\n      this.props.getEmployees();\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this = this;\n\n      this.interval = setInterval(function () {\n        _this.props.getSummary();\n\n        _this.props.getEmployees();\n      }, 5000);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      clearInterval(this.interval);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props$summary = this.props.summary,\n          rooms = _this$props$summary.rooms,\n          number_desks = _this$props$summary.number_desks,\n          members = _this$props$summary.members,\n          officeData = _this$props$summary.officeData;\n      var employees = this.props.employees;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35\n        },\n        __self: this\n      }, React.createElement(ContentHeader, {\n        title: \"\\u041F\\u0430\\u043D\\u0435\\u043B\\u044C \\u0443\\u043F\\u0440\\u0430\\u0432\\u043B\\u0435\\u043D\\u0438\\u044F\",\n        small: \"\\u0413\\u043B\\u0430\\u0432\\u043D\\u0430\\u044F \\u043F\\u0430\\u043D\\u0435\\u043B\\u044C\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36\n        },\n        __self: this\n      }), React.createElement(Content, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38\n        },\n        __self: this\n      }, React.createElement(InfoBox, {\n        cols: \"12 6 3\",\n        color: \"aqua\",\n        icon: \"cube\",\n        value: rooms.length,\n        text: \"\\u041A\\u043E\\u043C\\u043D\\u0430\\u0442\\u044B\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 39\n        },\n        __self: this\n      }), React.createElement(InfoBox, {\n        cols: \"12 6 3\",\n        color: \"red\",\n        icon: \"person\",\n        value: members.length,\n        text: \"\\u041C\\u0435\\u043D\\u0435\\u0434\\u0436\\u0435\\u0440\\u044B\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }), React.createElement(InfoBox, {\n        cols: \"12 6 3\",\n        color: \"yellow\",\n        icon: \"people\",\n        value: employees && employees.length || 0,\n        text: \"\\u0421\\u043E\\u0442\\u0440\\u0443\\u0434\\u043D\\u0438\\u043A\\u0438\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }), React.createElement(InfoBox, {\n        cols: \"12 6 3\",\n        color: \"green\",\n        icon: \"desktop\",\n        value: number_desks,\n        text: \"\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0435 \\u043C\\u0435\\u0441\\u0442\\u0430\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      })), React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, officeData && Object.keys(officeData).map(function (room) {\n        return React.createElement(Grid, {\n          key: \"room_\".concat(room),\n          cols: \"12\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 51\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"box_ box-default\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 52\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"box-header with-border\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 53\n          },\n          __self: this\n        }, React.createElement(\"i\", {\n          className: \"fa fa-building-o\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }), React.createElement(\"h3\", {\n          className: \"box-title\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }, \"\\u041C\\u041E\\u0419 \\u041E\\u0424\\u0418\\u0421 - \", officeData[room][0] && officeData[room][0].room)), React.createElement(\"div\", {\n          className: \"box-body\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57\n          },\n          __self: this\n        }, React.createElement(OfficeMap, {\n          id: \"id_\".concat(room),\n          data: officeData[room],\n          fields: ['type', 'patrimony', 'specification'],\n          horizontalSize: 6,\n          verticalSize: 4,\n          showNavigator: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }))));\n      }))), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      }), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Dashboard;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    summary: state.dashboard.summary,\n    employees: state.employee.list\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    getSummary: getSummary,\n    getEmployees: getEmployees\n  }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard);","map":{"version":3,"sources":["F:\\Scripts\\IBS_Dunice\\frontend\\src\\dashboard\\dashboard.jsx"],"names":["React","Component","connect","bindActionCreators","getSummary","ContentHeader","Content","InfoBox","OfficeMap","Grid","Row","getList","getEmployees","Dashboard","props","interval","setInterval","clearInterval","summary","rooms","number_desks","members","officeData","employees","length","Object","keys","map","room","mapStateToProps","state","dashboard","employee","list","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\n\nimport { getSummary } from './dashboardActions'\nimport ContentHeader from '../common/template/contentHeader'\nimport Content from '../common/template/content'\nimport InfoBox from '../common/widget/infoBox'\nimport OfficeMap from 'office-map'\nimport Grid from '../common/layout/grid'\nimport Row from '../common/layout/row'\nimport { getList as getEmployees } from '../employee/employeeActions'\n\nclass Dashboard extends Component {\n    componentWillMount() {\n        this.props.getSummary()\n        this.props.getEmployees()\n    }\n\n    componentDidMount() {\n        this.interval = setInterval(() => {\n            this.props.getSummary()\n            this.props.getEmployees()\n        }, 5000)\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.interval)\n    }\n\n    render() {\n        const { rooms, number_desks, members, officeData } = this.props.summary\n        const employees = this.props.employees\n        return (\n            <div>\n                <ContentHeader title='Панель управления' small='Главная панель' />\n                <Content>\n                    <Row>\n                        <InfoBox cols='12 6 3' color='aqua' icon='cube'\n                            value={rooms.length} text='Комнаты' />\n                        <InfoBox cols='12 6 3' color='red' icon='person'\n                            value={members.length} text='Менеджеры' />\n                        <InfoBox cols='12 6 3' color='yellow' icon='people'\n                            value={(employees && employees.length) || 0} text='Сотрудники' />\n                        <InfoBox cols='12 6 3' color='green' icon='desktop'\n                            value={number_desks} text='Рабочие места' />\n                    </Row>\n                    <Row>\n                        {\n                            officeData && Object.keys(officeData).map((room => {\n                                return (<Grid key={`room_${room}`} cols='12'>\n                                    <div className=\"box_ box-default\">\n                                        <div className=\"box-header with-border\">\n                                            <i className=\"fa fa-building-o\"></i>\n                                            <h3 className=\"box-title\">МОЙ ОФИС - {officeData[room][0] && officeData[room][0].room}</h3>\n                                        </div>\n                                        <div className=\"box-body\">\n                                            <OfficeMap\n                                                id={`id_${room}`}\n                                                data={officeData[room]}\n                                                fields={['type', 'patrimony', 'specification']}\n                                                horizontalSize={6}\n                                                verticalSize={4}\n                                                showNavigator={true}\n                                            />\n                                        </div>\n                                    </div>\n                                </Grid >)\n                            }))\n                        }\n                    </Row>\n                </Content>\n                <br />\n                <br />\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = state => ({ summary: state.dashboard.summary,\n                                    employees: state.employee.list })\nconst mapDispatchToProps = dispatch => bindActionCreators({ getSummary, getEmployees }, dispatch)\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard)\n"]},"metadata":{},"sourceType":"module"}