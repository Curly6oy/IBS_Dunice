{"ast":null,"code":"import _objectSpread from \"F:\\\\Scripts\\\\IBS_Dunice\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/objectSpread\";\nimport _classCallCheck from \"F:\\\\Scripts\\\\IBS_Dunice\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"F:\\\\Scripts\\\\IBS_Dunice\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"F:\\\\Scripts\\\\IBS_Dunice\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"F:\\\\Scripts\\\\IBS_Dunice\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"F:\\\\Scripts\\\\IBS_Dunice\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nimport _defineProperty from \"F:\\\\Scripts\\\\IBS_Dunice\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\n\nvar _suggestionsContainer,\n    _jsxFileName = \"F:\\\\Scripts\\\\IBS_Dunice\\\\frontend\\\\src\\\\desk\\\\suggestion.jsx\";\n\nimport React, { Component } from 'react';\nimport Autosuggest from 'react-autosuggest';\nimport If from '../common/operator/if';\nimport Grid from '../common/layout/grid';\nvar theme = {\n  container: {\n    position: 'relative'\n  },\n  input: {\n    width: \"100%\",\n    height: 34,\n    padding: '6px 12px',\n    fontFamily: ['Source Sans Pro', 'Helvetica Neue', 'Helvetica, Arial, sans-serif'],\n    fontWeight: 400,\n    fontSize: 14,\n    border: '1px solid #d2d6de',\n    borderTopLeftRadius: 0,\n    borderTopRightRadius: 0,\n    borderBottomLeftRadius: 0,\n    borderBottomRightRadius: 0,\n    lineHeight: 1.42857143,\n    color: '#333333'\n  },\n  inputDisabled: {\n    backgroundColor: '#eeeeee !important'\n  },\n  inputFocused: {\n    outline: 'none',\n    border: '1px solid #3c8dbc'\n  },\n  inputOpen: {\n    borderBottomLeftRadius: 0,\n    borderBottomRightRadius: 0\n  },\n  suggestionsContainer: {\n    display: 'none'\n  },\n  suggestionsContainerOpen: (_suggestionsContainer = {\n    display: 'block',\n    position: 'absolute',\n    top: 41,\n    width: '100%',\n    border: '1px solid #d2d6de',\n    backgroundColor: '#fff',\n    fontFamily: 'Source Sans Pro',\n    fontWeight: 400,\n    fontSize: 14,\n    borderRadius: 4\n  }, _defineProperty(_suggestionsContainer, \"borderRadius\", 4), _defineProperty(_suggestionsContainer, \"zIndex\", 2), _defineProperty(_suggestionsContainer, \"padding\", '2px 0px 0px 0px'), _suggestionsContainer),\n  suggestionsList: {\n    margin: 0,\n    padding: 0,\n    listStyleType: 'none'\n  },\n  suggestion: {\n    cursor: 'pointer',\n    padding: '6px 12px',\n    height: 34\n  },\n  suggestionHighlighted: {\n    backgroundColor: '#deebff'\n  }\n};\n\nvar Example =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Example, _Component);\n\n  function Example() {\n    var _this;\n\n    _classCallCheck(this, Example);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Example).call(this));\n\n    _this.getSuggestionValue = function (suggestion) {\n      return suggestion[_this.props.field];\n    };\n\n    _this.renderSuggestion = function (suggestion) {\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79\n        },\n        __self: this\n      }, suggestion[_this.props.field]);\n    };\n\n    _this.getSuggestions = function (value) {\n      if (!value) {\n        return [];\n      }\n\n      var list = _this.props.list || [];\n      var inputValue = \"\".concat(value).trim().toLowerCase();\n      var inputLength = inputValue.length;\n      var suggestions = inputLength === 0 ? [] : list.filter(function (element) {\n        return \"\".concat(element[_this.props.field]).toLowerCase().slice(0, inputLength) === \"\".concat(inputValue);\n      });\n      suggestions = suggestions.sort(function (a, b) {\n        if (isNaN(a[_this.props.field])) {\n          return a[_this.props.field].length - b[_this.props.field].length;\n        } else {\n          return a[_this.props.field] - b[_this.props.field];\n        }\n      });\n      return suggestions;\n    };\n\n    _this.onChange = function (event, _ref) {\n      var newValue = _ref.newValue;\n      var _this$props = _this.props,\n          input = _this$props.input,\n          onSelected = _this$props.onSelected;\n      input.onChange(newValue);\n\n      if (onSelected) {\n        var list = _this.props.list || [];\n        var inputValue = newValue && newValue.trim().toLowerCase();\n        var selectedValue = inputValue.length === 0 ? [] : list.filter(function (element) {\n          return element[_this.props.field].toLowerCase() === inputValue;\n        });\n\n        if (selectedValue.length > 0) {\n          onSelected(selectedValue[0]);\n        } else {\n          onSelected('');\n        }\n      }\n    };\n\n    _this.onSuggestionSelected = function (event, _ref2) {\n      var suggestionValue = _ref2.suggestionValue;\n      var onSelected = _this.props.onSelected;\n\n      if (onSelected) {\n        var selectedValue = _this.getSelectedValue(suggestionValue);\n\n        onSelected(selectedValue);\n      }\n    };\n\n    _this.onSuggestionHighlighted = function (_ref3) {\n      var suggestion = _ref3.suggestion;\n      var onSelected = _this.props.onSelected;\n\n      if (onSelected && suggestion) {\n        var selectedValue = _this.getSelectedValue(suggestion[_this.props.field]);\n\n        onSelected(selectedValue);\n      }\n    };\n\n    _this.getSelectedValue = function (value) {\n      var suggestions = _this.getSuggestions(value);\n\n      return suggestions.length > 0 ? suggestions[0] : '';\n    };\n\n    _this.onSuggestionsFetchRequested = function (_ref4) {\n      var value = _ref4.value;\n\n      var suggestions = _this.getSuggestions(value);\n\n      _this.setState({\n        suggestions: suggestions\n      });\n\n      var onSelected = _this.props.onSelected;\n\n      if (suggestions && suggestions.length === 0 && onSelected) {\n        onSelected('');\n      }\n    };\n\n    _this.onSuggestionsClearRequested = function () {\n      _this.setState({\n        suggestions: []\n      });\n    };\n\n    _this.state = {\n      suggestions: []\n    };\n    return _this;\n  }\n\n  _createClass(Example, [{\n    key: \"render\",\n    value: function render() {\n      var suggestions = this.state.suggestions;\n      return React.createElement(Grid, {\n        cols: this.props.cols || 12,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, React.createElement(If, {\n        test: this.props.label,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 172\n        },\n        __self: this\n      }, this.props.label)), React.createElement(\"div\", {\n        className: \"input-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"input-group-addon\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 175\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: this.props.icon || \"fa fa-user\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 176\n        },\n        __self: this\n      })), React.createElement(Autosuggest, {\n        suggestions: suggestions,\n        onSuggestionsFetchRequested: this.onSuggestionsFetchRequested,\n        onSuggestionsClearRequested: this.onSuggestionsClearRequested,\n        getSuggestionValue: this.getSuggestionValue,\n        renderSuggestion: this.renderSuggestion,\n        inputProps: _objectSpread({}, this.props.input, {\n          onChange: this.onChange,\n          placeholder: this.props.placeholder,\n          disabled: this.props.readOnly\n        }),\n        placeholder: this.props.placeholder,\n        className: \"form-control\",\n        theme: theme,\n        onSuggestionSelected: this.onSuggestionSelected,\n        onSuggestionHighlighted: this.onSuggestionHighlighted,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      }))));\n    }\n  }]);\n\n  return Example;\n}(Component);\n\nexport { Example as default };","map":{"version":3,"sources":["F:\\Scripts\\IBS_Dunice\\frontend\\src\\desk\\suggestion.jsx"],"names":["React","Component","Autosuggest","If","Grid","theme","container","position","input","width","height","padding","fontFamily","fontWeight","fontSize","border","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","lineHeight","color","inputDisabled","backgroundColor","inputFocused","outline","inputOpen","suggestionsContainer","display","suggestionsContainerOpen","top","borderRadius","suggestionsList","margin","listStyleType","suggestion","cursor","suggestionHighlighted","Example","getSuggestionValue","props","field","renderSuggestion","getSuggestions","value","list","inputValue","trim","toLowerCase","inputLength","length","suggestions","filter","element","slice","sort","a","b","isNaN","onChange","event","newValue","onSelected","selectedValue","onSuggestionSelected","suggestionValue","getSelectedValue","onSuggestionHighlighted","onSuggestionsFetchRequested","setState","onSuggestionsClearRequested","state","cols","label","icon","placeholder","disabled","readOnly"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport Autosuggest from 'react-autosuggest';\nimport If from '../common/operator/if'\nimport Grid from '../common/layout/grid'\n\nconst theme = {\n  container: {\n    position: 'relative'\n  },\n  input: {\n    width: \"100%\",\n    height: 34,\n    padding: '6px 12px',\n    fontFamily: ['Source Sans Pro', 'Helvetica Neue', 'Helvetica, Arial, sans-serif'],\n    fontWeight: 400,\n    fontSize: 14,\n    border: '1px solid #d2d6de',\n    borderTopLeftRadius: 0,\n    borderTopRightRadius: 0,\n    borderBottomLeftRadius: 0,\n    borderBottomRightRadius: 0,\n    lineHeight: 1.42857143,\n    color: '#333333'\n  },\n  inputDisabled: {\n    backgroundColor: '#eeeeee !important'\n  },\n  inputFocused: {\n    outline: 'none',\n    border: '1px solid #3c8dbc'\n  },\n  inputOpen: {\n    borderBottomLeftRadius: 0,\n    borderBottomRightRadius: 0\n  },\n  suggestionsContainer: {\n    display: 'none'\n  },\n  suggestionsContainerOpen: {\n    display: 'block',\n    position: 'absolute',\n    top: 41,\n    width: '100%',\n    border: '1px solid #d2d6de',\n    backgroundColor: '#fff',\n    fontFamily: 'Source Sans Pro',\n    fontWeight: 400,\n    fontSize: 14,\n    borderRadius: 4,\n    borderRadius: 4,\n    zIndex: 2,\n    padding: '2px 0px 0px 0px'\n  },\n  suggestionsList: {\n    margin: 0,\n    padding: 0,\n    listStyleType: 'none',\n  },\n  suggestion: {\n    cursor: 'pointer',\n    padding: '6px 12px',\n    height: 34\n  },\n  suggestionHighlighted: {\n    backgroundColor: '#deebff'\n  }\n}\n\nexport default class Example extends Component {\n  constructor() {\n    super();\n\n    this.state = { suggestions: [] }\n  }\n\n  getSuggestionValue = suggestion => suggestion[this.props.field];\n\n  renderSuggestion = suggestion => (\n    <div>\n      {suggestion[this.props.field]}\n    </div>\n  )\n\n  getSuggestions = value => {\n    if (!value) {\n      return []\n    }\n    \n    const list = this.props.list || []\n    const inputValue = `${value}`.trim().toLowerCase()\n\n    const inputLength = inputValue.length\n\n    let suggestions = inputLength === 0 ? [] :\n    list.filter(element => `${element[this.props.field]}`.toLowerCase().slice(0, inputLength) === `${inputValue}`)\n\n    suggestions = suggestions.sort((a, b) => {\n      if(isNaN(a[this.props.field]))  {\n        return a[this.props.field].length - b[this.props.field].length\n      } else {\n        return a[this.props.field] - b[this.props.field]\n      }      \n    })\n\n    return suggestions\n  }\n\n  onChange = (event, { newValue }) => {\n    const { input, onSelected } = this.props\n\n    input.onChange(newValue)\n\n    if (onSelected) {\n      const list = this.props.list || []\n      const inputValue = newValue && newValue.trim().toLowerCase();\n      const selectedValue = inputValue.length === 0 ? [] :\n        list.filter(element => element[this.props.field].toLowerCase() === inputValue)\n\n      if (selectedValue.length > 0) {\n        onSelected(selectedValue[0])\n      } else {\n        onSelected('')\n      }\n    }\n  }\n\n  onSuggestionSelected = (event, { suggestionValue }) => {\n    const { onSelected } = this.props\n\n    if (onSelected) {\n      const selectedValue = this.getSelectedValue(suggestionValue)\n      onSelected(selectedValue)\n    }\n  }\n\n  onSuggestionHighlighted = ({ suggestion }) => {\n    const { onSelected } = this.props\n\n    if (onSelected && suggestion) {\n      const selectedValue = this.getSelectedValue(suggestion[this.props.field])\n\n      onSelected(selectedValue)\n    }\n  }\n\n  getSelectedValue = value => {\n    const suggestions = this.getSuggestions(value)\n    return suggestions.length > 0 ? suggestions[0] : ''\n  }\n\n  onSuggestionsFetchRequested = ({ value }) => {\n    const suggestions = this.getSuggestions(value)\n    this.setState({ suggestions })\n\n    const { onSelected } = this.props\n    if (suggestions && suggestions.length === 0 && onSelected) {\n      onSelected('')\n    }\n  }\n\n  onSuggestionsClearRequested = () => {\n    this.setState({ suggestions: [] })\n  }\n\n  render() {\n    const { suggestions } = this.state;\n\n    return (\n      <Grid cols={this.props.cols || 12}>\n        <div className=\"form-group\">\n          <If test={this.props.label}>\n            <label>{this.props.label}</label>\n          </If>\n          <div className=\"input-group\">\n            <div className=\"input-group-addon\">              \n                <i className={this.props.icon || \"fa fa-user\"}></i>              \n            </div>\n            <Autosuggest\n              suggestions={suggestions}\n              onSuggestionsFetchRequested={this.onSuggestionsFetchRequested}\n              onSuggestionsClearRequested={this.onSuggestionsClearRequested}\n              getSuggestionValue={this.getSuggestionValue}\n              renderSuggestion={this.renderSuggestion}\n              inputProps={{ ...this.props.input, onChange: this.onChange, placeholder: this.props.placeholder, disabled: this.props.readOnly}}\n              placeholder={this.props.placeholder}\n              className=\"form-control\"\n              theme={theme}\n              onSuggestionSelected={this.onSuggestionSelected}\n              onSuggestionHighlighted={this.onSuggestionHighlighted} />\n          </div>\n        </div>\n      </Grid>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}