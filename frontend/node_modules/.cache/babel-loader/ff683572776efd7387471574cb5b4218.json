{"ast":null,"code":"import _classCallCheck from \"F:\\\\Scripts\\\\IBS_Dunice\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"F:\\\\Scripts\\\\IBS_Dunice\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"F:\\\\Scripts\\\\IBS_Dunice\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"F:\\\\Scripts\\\\IBS_Dunice\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"F:\\\\Scripts\\\\IBS_Dunice\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"F:\\\\Scripts\\\\IBS_Dunice\\\\frontend\\\\src\\\\desk\\\\FileUploadComponent.jsx\";\nimport React from 'react';\n\nvar FileUploadComponent =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(FileUploadComponent, _React$Component);\n\n  function FileUploadComponent() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, FileUploadComponent);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(FileUploadComponent)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.handleFileChange = function (event) {\n      var file = event.target.files[0];\n      if (!file) return; // Дальнейшая обработка файла (например, отправка на сервер) здесь...\n\n      _this.props.onFileSelect(file); // Вызываем функцию, переданную в props\n\n    };\n\n    return _this;\n  }\n\n  _createClass(FileUploadComponent, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(\"div\", {\n        className: \"file-upload\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"file-upload-input\",\n        className: \"btn btn-default\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15\n        },\n        __self: this\n      }, \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u0438\\u0442\\u044C \\u0448\\u0430\\u0431\\u043B\\u043E\\u043D\"), React.createElement(\"input\", {\n        id: \"file-upload-input\",\n        type: \"file\",\n        style: {\n          display: 'none'\n        },\n        onChange: this.handleFileChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return FileUploadComponent;\n}(React.Component);\n\nexport default FileUploadComponent;","map":{"version":3,"sources":["F:\\Scripts\\IBS_Dunice\\frontend\\src\\desk\\FileUploadComponent.jsx"],"names":["React","FileUploadComponent","handleFileChange","event","file","target","files","props","onFileSelect","display","Component"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;IAEMC,mB;;;;;;;;;;;;;;;;;;UACJC,gB,GAAmB,UAACC,KAAD,EAAW;AAC5B,UAAMC,IAAI,GAAGD,KAAK,CAACE,MAAN,CAAaC,KAAb,CAAmB,CAAnB,CAAb;AACA,UAAI,CAACF,IAAL,EAAW,OAFiB,CAI5B;;AACA,YAAKG,KAAL,CAAWC,YAAX,CAAwBJ,IAAxB,EAL4B,CAKG;;AAChC,K;;;;;;;6BAEQ;AACP,aACE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAO,QAAA,OAAO,EAAC,mBAAf;AAAmC,QAAA,SAAS,EAAC,iBAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uGADF,EAIE;AACE,QAAA,EAAE,EAAC,mBADL;AAEE,QAAA,IAAI,EAAC,MAFP;AAGE,QAAA,KAAK,EAAE;AAAEK,UAAAA,OAAO,EAAE;AAAX,SAHT;AAIE,QAAA,QAAQ,EAAE,KAAKP,gBAJjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,CADF;AAaD;;;;EAvB+BF,KAAK,CAACU,S;;AA0BxC,eAAeT,mBAAf","sourcesContent":["import React from 'react';\r\n\r\nclass FileUploadComponent extends React.Component {\r\n  handleFileChange = (event) => {\r\n    const file = event.target.files[0];\r\n    if (!file) return;\r\n\r\n    // Дальнейшая обработка файла (например, отправка на сервер) здесь...\r\n    this.props.onFileSelect(file); // Вызываем функцию, переданную в props\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"file-upload\">\r\n        <label htmlFor=\"file-upload-input\" className=\"btn btn-default\">\r\n          Загрузить шаблон\r\n        </label>\r\n        <input\r\n          id=\"file-upload-input\"\r\n          type=\"file\"\r\n          style={{ display: 'none' }}\r\n          onChange={this.handleFileChange}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FileUploadComponent;\r\n"]},"metadata":{},"sourceType":"module"}