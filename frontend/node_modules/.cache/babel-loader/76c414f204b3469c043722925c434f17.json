{"ast":null,"code":"import axios from 'axios';\nimport { toastr } from 'react-redux-toastr';\nimport { initialize } from 'redux-form';\nimport { showTabs, selectTab } from '../common/tab/tabActions';\nimport consts from '../consts';\nvar INITIAL_VALUES = {};\nexport function getList() {\n  var request = axios.get(\"\".concat(consts.API_URL, \"/equipments\"));\n  return {\n    type: 'EQUIPMENTS_FETCHED',\n    payload: request\n  };\n}\nexport function create(values) {\n  return submit(values, 'post');\n}\nexport function update(values) {\n  return submit(values, 'put');\n}\nexport function remove(values) {\n  return function (dispatch) {\n    var id = values.id ? values.id : '';\n    axios.delete(\"\".concat(consts.API_URL, \"/equipments/\").concat(id)).then(function (resp) {\n      toastr.success('Success', 'Successful operation.');\n      dispatch({\n        type: 'EQUIPMENTS_DELETED',\n        payload: id\n      });\n    }).catch(function (e) {\n      e.response.data.errors.forEach(function (error) {\n        return toastr.error('Error', error);\n      });\n    });\n  };\n}\n\nfunction submit(values, method) {\n  return function (dispatch) {\n    var id = values.id ? values.id : '';\n    axios[method](\"\".concat(consts.API_URL, \"/equipments/\").concat(id), values).then(function (resp) {\n      toastr.success('Success', 'Successful operation.');\n      dispatch(init());\n    }).catch(function (e) {\n      e.response.data.errors.forEach(function (error) {\n        return toastr.error('Error', error);\n      });\n    });\n  };\n}\n\nexport function prepareToShow(equipmentId, callback) {\n  return function (dispatch) {\n    axios['get'](\"\".concat(consts.API_URL, \"/equipments/\").concat(equipmentId)).then(function (equipment) {\n      dispatch(callback(equipment.data));\n    }).catch(function (e) {\n      e.response.data.errors.forEach(function (error) {\n        return toastr.error('Error', error);\n      });\n    });\n  }; // Закрытие функции prepareToShow\n}\nexport function showUpdate(equipment) {\n  return [showTabs('tabUpdate'), selectTab('tabUpdate'), initialize('equipmentForm', equipment)];\n}\nexport function showDelete(equipment) {\n  return [showTabs('tabDelete'), selectTab('tabDelete'), initialize('equipmentForm', equipment)];\n}\nexport function init() {\n  return [showTabs('tabList', 'tabCreate'), selectTab('tabList'), getList(), initialize('equipmentForm', INITIAL_VALUES)];\n}","map":{"version":3,"sources":["F:\\Scripts\\my-office-master\\frontend\\src\\equipment\\equipmentActions.js"],"names":["axios","toastr","initialize","showTabs","selectTab","consts","INITIAL_VALUES","getList","request","get","API_URL","type","payload","create","values","submit","update","remove","dispatch","id","delete","then","resp","success","catch","e","response","data","errors","forEach","error","method","init","prepareToShow","equipmentId","callback","equipment","showUpdate","showDelete"],"mappings":"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","sourcesContent":["import axios from 'axios'\nimport { toastr } from 'react-redux-toastr'\nimport { initialize } from 'redux-form'\nimport { showTabs, selectTab } from '../common/tab/tabActions'\nimport consts from '../consts'\n\nconst INITIAL_VALUES = {}\n\nexport function getList() {\n    const request = axios.get(`${consts.API_URL}/equipments`)\n    return {\n        type: 'EQUIPMENTS_FETCHED',\n        payload: request\n    }\n}\n\nexport function create(values) {\n    return submit(values, 'post')\n}\n\nexport function update(values) {\n    return submit(values, 'put')\n}\n\nexport function remove(values) {\n    return dispatch => {\n        const id = values.id ? values.id : ''\n        axios.delete(`${consts.API_URL}/equipments/${id}`)\n            .then(resp => {\n                toastr.success('Success', 'Successful operation.')\n                dispatch({\n                    type: 'EQUIPMENTS_DELETED',\n                    payload: id\n                })\n            })\n            .catch(e => {\n                e.response.data.errors.forEach(error => toastr.error('Error', error))\n            })\n    }\n}\n\nfunction submit(values, method) {\n    return dispatch => {\n        const id = values.id ? values.id : ''\n        axios[method](`${consts.API_URL}/equipments/${id}`, values)\n            .then(resp => {\n                toastr.success('Success', 'Successful operation.')\n                dispatch(init())\n            })\n            .catch(e => {\n                e.response.data.errors.forEach(error => toastr.error('Error', error))\n            })\n    }\n}\n\nexport function prepareToShow(equipmentId, callback) {\n    return dispatch => {\n        axios['get'](`${consts.API_URL}/equipments/${equipmentId}`)\n            .then(equipment => { dispatch(callback(equipment.data)) })\n            .catch(e => {\n                e.response.data.errors.forEach(error => toastr.error('Error', error))\n            })\n    } // Закрытие функции prepareToShow\n}\n\nexport function showUpdate(equipment) {       \n    return [\n        showTabs('tabUpdate'),\n        selectTab('tabUpdate'),\n        initialize('equipmentForm', equipment)\n    ]\n}\n\nexport function showDelete(equipment) {\n    return [\n        showTabs('tabDelete'),\n        selectTab('tabDelete'),\n        initialize('equipmentForm', equipment)\n    ]\n}\n\nexport function init() {\n    return [\n        showTabs('tabList', 'tabCreate'),\n        selectTab('tabList'),\n        getList(),\n        initialize('equipmentForm', INITIAL_VALUES)\n    ]\n}\n"]},"metadata":{},"sourceType":"module"}