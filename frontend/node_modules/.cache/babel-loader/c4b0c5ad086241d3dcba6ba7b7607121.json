{"ast":null,"code":"import _classCallCheck from \"F:\\\\Scripts\\\\IBS_Dunice\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"F:\\\\Scripts\\\\IBS_Dunice\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"F:\\\\Scripts\\\\IBS_Dunice\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"F:\\\\Scripts\\\\IBS_Dunice\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"F:\\\\Scripts\\\\IBS_Dunice\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"F:\\\\Scripts\\\\IBS_Dunice\\\\frontend\\\\src\\\\room\\\\roomForm.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { reduxForm, Field } from 'redux-form';\nimport { init } from './roomActions';\nimport LabelAndInput from '../common/form/labelAndInput';\nimport Select from '../common/form/select';\nimport { getList as getUserList } from '../user/userActions';\n\nvar RoomForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(RoomForm, _Component);\n\n  function RoomForm() {\n    _classCallCheck(this, RoomForm);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(RoomForm).apply(this, arguments));\n  }\n\n  _createClass(RoomForm, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      this.props.getUserList();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          handleSubmit = _this$props.handleSubmit,\n          readOnly = _this$props.readOnly,\n          userList = _this$props.userList;\n      return React.createElement(\"form\", {\n        role: \"form\",\n        onSubmit: handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"box-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 21\n        },\n        __self: this\n      }, React.createElement(Field, {\n        name: \"name\",\n        label: \"Name\",\n        cols: \"12 4\",\n        placeholder: \"Enter the name\",\n        component: LabelAndInput,\n        readOnly: readOnly,\n        autoFocus: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22\n        },\n        __self: this\n      }), React.createElement(Field, {\n        name: \"team\",\n        label: \"Managers\",\n        cols: \"12 4\",\n        component: Select,\n        readOnly: readOnly,\n        options: userList,\n        optionValue: \"id\",\n        optionLabel: \"name\",\n        isMulti: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      })), React.createElement(\"div\", {\n        className: \"box-footer text-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-\".concat(this.props.submitClass),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28\n        },\n        __self: this\n      }, this.props.submitLabel), React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-default\",\n        onClick: this.props.init,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31\n        },\n        __self: this\n      }, \"Cancel\")));\n    }\n  }]);\n\n  return RoomForm;\n}(Component);\n\nRoomForm = reduxForm({\n  form: 'roomForm',\n  destroyOnUnmount: false\n})(RoomForm);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    userList: state.user.list\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    init: init,\n    getUserList: getUserList\n  }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(RoomForm);","map":{"version":3,"sources":["F:\\Scripts\\IBS_Dunice\\frontend\\src\\room\\roomForm.jsx"],"names":["React","Component","connect","bindActionCreators","reduxForm","Field","init","LabelAndInput","Select","getList","getUserList","RoomForm","props","handleSubmit","readOnly","userList","submitClass","submitLabel","form","destroyOnUnmount","mapStateToProps","state","user","list","mapDispatchToProps","dispatch"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,kBAAT,QAAmC,OAAnC;AACA,SAASC,SAAT,EAAoBC,KAApB,QAAiC,YAAjC;AAEA,SAASC,IAAT,QAAqB,eAArB;AACA,OAAOC,aAAP,MAA0B,8BAA1B;AACA,OAAOC,MAAP,MAAmB,uBAAnB;AAEA,SAASC,OAAO,IAAIC,WAApB,QAAuC,qBAAvC;;IAEMC,Q;;;;;;;;;;;;;yCACmB;AACjB,WAAKC,KAAL,CAAWF,WAAX;AACH;;;6BAEQ;AAAA,wBACwC,KAAKE,KAD7C;AAAA,UACGC,YADH,eACGA,YADH;AAAA,UACiBC,QADjB,eACiBA,QADjB;AAAA,UAC2BC,QAD3B,eAC2BA,QAD3B;AAEL,aACI;AAAM,QAAA,IAAI,EAAC,MAAX;AAAkB,QAAA,QAAQ,EAAEF,YAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,KAAK,EAAC,MAAzB;AAAgC,QAAA,IAAI,EAAC,MAArC;AAA4C,QAAA,WAAW,EAAC,gBAAxD;AACI,QAAA,SAAS,EAAEN,aADf;AAC8B,QAAA,QAAQ,EAAEO,QADxC;AACkD,QAAA,SAAS,EAAE,IAD7D;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAGI,oBAAC,KAAD;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,KAAK,EAAC,UAAzB;AAAoC,QAAA,IAAI,EAAC,MAAzC;AACI,QAAA,SAAS,EAAEN,MADf;AACuB,QAAA,QAAQ,EAAEM,QADjC;AAC2C,QAAA,OAAO,EAAEC,QADpD;AAC8D,QAAA,WAAW,EAAC,IAD1E;AAC+E,QAAA,WAAW,EAAC,MAD3F;AACkG,QAAA,OAAO,EAAE,IAD3G;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHJ,CADJ,EAOI;AAAK,QAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,oBAAa,KAAKH,KAAL,CAAWI,WAAxB,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACK,KAAKJ,KAAL,CAAWK,WADhB,CADJ,EAII;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,iBAAhC;AACI,QAAA,OAAO,EAAE,KAAKL,KAAL,CAAWN,IADxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJJ,CAPJ,CADJ;AAiBH;;;;EAxBkBL,S;;AA2BvBU,QAAQ,GAAGP,SAAS,CAAC;AAAEc,EAAAA,IAAI,EAAE,UAAR;AAAoBC,EAAAA,gBAAgB,EAAE;AAAtC,CAAD,CAAT,CAAyDR,QAAzD,CAAX;;AAEA,IAAMS,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK;AAAA,SAAK;AAAEN,IAAAA,QAAQ,EAAEM,KAAK,CAACC,IAAN,CAAWC;AAAvB,GAAL;AAAA,CAA7B;;AACA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ;AAAA,SAAItB,kBAAkB,CAAC;AAAEG,IAAAA,IAAI,EAAJA,IAAF;AAAQI,IAAAA,WAAW,EAAXA;AAAR,GAAD,EAAwBe,QAAxB,CAAtB;AAAA,CAAnC;;AACA,eAAevB,OAAO,CAACkB,eAAD,EAAkBI,kBAAlB,CAAP,CAA6Cb,QAA7C,CAAf","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { reduxForm, Field } from 'redux-form'\n\nimport { init } from './roomActions'\nimport LabelAndInput from '../common/form/labelAndInput'\nimport Select from '../common/form/select'\n\nimport { getList as getUserList } from '../user/userActions'\n\nclass RoomForm extends Component {\n    componentWillMount() {\n        this.props.getUserList()\n    }\n\n    render() {\n        const { handleSubmit, readOnly, userList } = this.props\n        return (\n            <form role='form' onSubmit={handleSubmit}>\n                <div className='box-body'>\n                    <Field name='name' label='Name' cols='12 4' placeholder='Enter the name'\n                        component={LabelAndInput} readOnly={readOnly} autoFocus={true} />\n                    <Field name='team' label='Managers' cols='12 4'\n                        component={Select} readOnly={readOnly} options={userList} optionValue='id' optionLabel='name' isMulti={true} />\n                </div>\n                <div className='box-footer text-right'>\n                    <button type='submit' className={`btn btn-${this.props.submitClass}`}>\n                        {this.props.submitLabel}\n                    </button>\n                    <button type='button' className='btn btn-default'\n                        onClick={this.props.init}>Cancel</button>\n                </div>\n            </form>\n        )\n    }\n}\n\nRoomForm = reduxForm({ form: 'roomForm', destroyOnUnmount: false })(RoomForm)\n\nconst mapStateToProps = state => ({ userList: state.user.list })\nconst mapDispatchToProps = dispatch => bindActionCreators({ init, getUserList }, dispatch)\nexport default connect(mapStateToProps, mapDispatchToProps)(RoomForm)"]},"metadata":{},"sourceType":"module"}