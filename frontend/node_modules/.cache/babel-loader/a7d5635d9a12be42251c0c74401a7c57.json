{"ast":null,"code":"import _classCallCheck from \"F:\\\\Scripts\\\\IBS_Dunice\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"F:\\\\Scripts\\\\IBS_Dunice\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"F:\\\\Scripts\\\\IBS_Dunice\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"F:\\\\Scripts\\\\IBS_Dunice\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"F:\\\\Scripts\\\\IBS_Dunice\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"F:\\\\Scripts\\\\IBS_Dunice\\\\frontend\\\\src\\\\desk\\\\deskForm.jsx\";\nimport React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { reduxForm, Field, formValueSelector, change } from 'redux-form';\nimport { init, getOfficeData, prepareToShow, showUpdate, showCreate, update } from './deskActions';\nimport { getList as getRooms } from '../room/roomActions';\nimport { getList as getEmployees } from '../employee/employeeActions';\nimport { getList as getEquipments } from '../equipment/equipmentActions';\nimport If from '../common/operator/if';\nimport Grid from '../common/layout/grid';\nimport OfficeMap from 'office-map';\nimport Select from '../common/form/select';\nimport EquipmentList from './equipmentList';\nimport EmployeeList from './employeeList';\nimport SelectWithIcon from '../common/form/selectWithIcon';\nimport './desk.css';\n\nvar DeskForm =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(DeskForm, _Component);\n\n  function DeskForm(props) {\n    var _this;\n\n    _classCallCheck(this, DeskForm);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(DeskForm).call(this, props)); // Инициализация данных при монтировании компонента\n\n    _this.getPossibleDirections = function () {\n      return [{\n        id: 'north',\n        name: 'North'\n      }, {\n        id: 'south',\n        name: 'South'\n      }, {\n        id: 'east',\n        name: 'East'\n      }, {\n        id: 'west',\n        name: 'West'\n      }, {\n        id: 'north-east',\n        name: 'North-east'\n      }, {\n        id: 'north-west',\n        name: 'North-west'\n      }, {\n        id: 'south-east',\n        name: 'South-east'\n      }, {\n        id: 'south-west',\n        name: 'South-west'\n      }];\n    };\n\n    _this.getPossiblePositions = function () {\n      return Array.from({\n        length: 26\n      }, function (_, i) {\n        return {\n          id: i,\n          name: i\n        };\n      });\n    };\n\n    _this.onEmployeeChange = function (employee, member, index) {\n      _this.props.dispatch(change('deskForm', \"employees[\".concat(index, \"].identifier\"), employee ? employee.identifier : ''));\n    };\n\n    _this.onEquipmentChange = function (equipment, member, index) {\n      _this.props.dispatch(change('deskForm', \"equipments[\".concat(index, \"].type\"), equipment ? equipment.type : ''));\n    };\n\n    _this.handleFileUpload = function (event) {\n      var file = event.target.files[0];\n      if (!file) return;\n      var formData = new FormData();\n      formData.append('templateFile', file);\n      fetch('/api/path_to_upload_endpoint', {\n        method: 'POST',\n        body: formData\n      }).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        console.log('Success:', data);\n      }).catch(function (error) {\n        console.error('Error:', error);\n      });\n    };\n\n    props.getRooms();\n    props.getEmployees();\n    props.getEquipments();\n    return _this;\n  } // Вспомогательная функция для создания списка направлений\n\n\n  _createClass(DeskForm, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          handleSubmit = _this$props.handleSubmit,\n          submitLabel = _this$props.submitLabel,\n          readOnly = _this$props.readOnly,\n          rooms = _this$props.rooms,\n          employees = _this$props.employees,\n          equipments = _this$props.equipments,\n          officeData = _this$props.officeData,\n          idSelected = _this$props.idSelected,\n          init = _this$props.init,\n          cancelLabel = _this$props.cancelLabel,\n          submitClass = _this$props.submitClass;\n      var functionShow = submitLabel === 'Create' ? showCreate : showUpdate;\n      return React.createElement(\"form\", {\n        role: \"form\",\n        onSubmit: handleSubmit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"box-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }, React.createElement(Field, {\n        name: \"roomId\",\n        label: \"\\u041A\\u043E\\u043C\\u043D\\u0430\\u0442\\u0430\",\n        cols: \"12 6\",\n        component: Select,\n        readOnly: readOnly,\n        options: rooms,\n        optionValue: \"id\",\n        optionLabel: \"name\",\n        autoFocus: true,\n        inputOnChange: this.props.getOfficeData,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84\n        },\n        __self: this\n      }), React.createElement(Field, {\n        name: \"chairDirection\",\n        label: \"\\u041D\\u0430\\u043F\\u0440\\u0430\\u0432\\u043B\\u0435\\u043D\\u0438\\u0435 \\u0441\\u0442\\u043E\\u043B\\u0430\",\n        cols: \"12 2\",\n        component: SelectWithIcon,\n        icon: \"compass\",\n        readOnly: readOnly,\n        options: this.getPossibleDirections(),\n        optionValue: \"id\",\n        optionLabel: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }), React.createElement(Field, {\n        name: \"x\",\n        label: \"X \\u043F\\u043E\\u0437\\u0438\\u0446\\u0438\\u044F\",\n        cols: \"12 2\",\n        component: SelectWithIcon,\n        icon: \"map-marker\",\n        readOnly: readOnly,\n        options: this.getPossiblePositions(),\n        optionValue: \"id\",\n        optionLabel: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 91\n        },\n        __self: this\n      }), React.createElement(Field, {\n        name: \"y\",\n        label: \"Y \\u043F\\u043E\\u0437\\u0438\\u0446\\u0438\\u044F\",\n        cols: \"12 2\",\n        component: SelectWithIcon,\n        icon: \"map-marker\",\n        readOnly: readOnly,\n        options: this.getPossiblePositions(),\n        optionValue: \"id\",\n        optionLabel: \"name\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94\n        },\n        __self: this\n      }), React.createElement(EmployeeList, {\n        id: \"employeeList\",\n        cols: \"12 6\",\n        list: employees,\n        readOnly: readOnly,\n        field: \"employees\",\n        legend: \"\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439\",\n        icon: \"user-plus\",\n        onSelected: this.onEmployeeChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }), React.createElement(EquipmentList, {\n        cols: \"12 6\",\n        list: equipments,\n        readOnly: readOnly,\n        field: \"equipments\",\n        legend: \"\\u041E\\u0431\\u043E\\u0440\\u0443\\u0434\\u043E\\u0432\\u0430\\u043D\\u0438\\u0435\",\n        icon: \"laptop\",\n        onSelected: this.onEquipmentChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101\n        },\n        __self: this\n      }), React.createElement(\"div\", {\n        className: \"form-group\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104\n        },\n        __self: this\n      }, React.createElement(\"label\", {\n        htmlFor: \"file-upload\",\n        className: \"btn btn-default\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      }, \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u0438\\u0442\\u044C \\u0448\\u0430\\u0431\\u043B\\u043E\\u043D\"), React.createElement(\"input\", {\n        id: \"file-upload\",\n        type: \"file\",\n        style: {\n          display: 'none'\n        },\n        onChange: this.handleFileUpload,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 108\n        },\n        __self: this\n      }))), React.createElement(\"div\", {\n        className: \"box-footer text-right\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111\n        },\n        __self: this\n      }, React.createElement(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-\".concat(submitClass),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112\n        },\n        __self: this\n      }, submitLabel), React.createElement(\"button\", {\n        type: \"button\",\n        className: \"btn btn-default\",\n        onClick: init,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, cancelLabel)), React.createElement(If, {\n        test: officeData && officeData.length > 0,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"box-footer\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        cols: \"12\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"box box-default\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        className: \"box-header with-border\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 123\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"fa fa-building-o\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 124\n        },\n        __self: this\n      }), React.createElement(\"h3\", {\n        className: \"box-title\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125\n        },\n        __self: this\n      }, \"Office Map\")), React.createElement(\"div\", {\n        className: \"box-body\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(OfficeMap, {\n        id: officeData[0].room,\n        data: officeData,\n        horizontalSize: 6,\n        verticalSize: 6,\n        onSelect: function onSelect(desk) {\n          return _this2.props.prepareToShow(desk, functionShow);\n        },\n        onMove: function onMove(desk) {\n          return _this2.props.update(desk, functionShow);\n        },\n        editMode: true,\n        showNavigator: true,\n        fields: ['type', 'patrimony', 'specification'],\n        idSelected: idSelected,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      })))))));\n    }\n  }]);\n\n  return DeskForm;\n}(Component); // Redux Form и подключение к Redux Store\n\n\nDeskForm = reduxForm({\n  form: 'deskForm',\n  destroyOnUnmount: false\n})(DeskForm);\nvar selector = formValueSelector('deskForm');\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    rooms: state.room.list,\n    officeData: state.desk.officeData,\n    equipments: state.equipment.list,\n    employees: state.employee.list,\n    idSelected: state.desk.idSelected\n  };\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return bindActionCreators({\n    init: init,\n    getRooms: getRooms,\n    getEmployees: getEmployees,\n    getEquipments: getEquipments,\n    getOfficeData: getOfficeData,\n    prepareToShow: prepareToShow,\n    showCreate: showCreate,\n    showUpdate: showUpdate,\n    update: update\n  }, dispatch);\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(DeskForm);","map":{"version":3,"sources":["F:\\Scripts\\IBS_Dunice\\frontend\\src\\desk\\deskForm.jsx"],"names":["React","Component","connect","bindActionCreators","reduxForm","Field","formValueSelector","change","init","getOfficeData","prepareToShow","showUpdate","showCreate","update","getList","getRooms","getEmployees","getEquipments","If","Grid","OfficeMap","Select","EquipmentList","EmployeeList","SelectWithIcon","DeskForm","props","getPossibleDirections","id","name","getPossiblePositions","Array","from","length","_","i","onEmployeeChange","employee","member","index","dispatch","identifier","onEquipmentChange","equipment","type","handleFileUpload","event","file","target","files","formData","FormData","append","fetch","method","body","then","response","json","data","console","log","catch","error","handleSubmit","submitLabel","readOnly","rooms","employees","equipments","officeData","idSelected","cancelLabel","submitClass","functionShow","display","room","desk","form","destroyOnUnmount","selector","mapStateToProps","state","list","mapDispatchToProps"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators } from 'redux'\nimport { reduxForm, Field, formValueSelector, change } from 'redux-form'\n\nimport { init, getOfficeData, prepareToShow, showUpdate, showCreate, update } from './deskActions'\nimport { getList as getRooms } from '../room/roomActions'\nimport { getList as getEmployees } from '../employee/employeeActions'\nimport { getList as getEquipments } from '../equipment/equipmentActions'\nimport If from '../common/operator/if'\nimport Grid from '../common/layout/grid'\nimport OfficeMap from 'office-map'\n\nimport Select from '../common/form/select'\nimport EquipmentList from './equipmentList'\nimport EmployeeList from './employeeList'\nimport SelectWithIcon from '../common/form/selectWithIcon'\n\nimport './desk.css'\n\nclass DeskForm extends Component {\n    constructor(props) {\n        super(props);\n\n        // Инициализация данных при монтировании компонента\n        props.getRooms();\n        props.getEmployees();\n        props.getEquipments();\n    }\n\n    // Вспомогательная функция для создания списка направлений\n    getPossibleDirections = () => [\n        { id: 'north', name: 'North' },\n        { id: 'south', name: 'South' },\n        { id: 'east', name: 'East' },\n        { id: 'west', name: 'West' },\n        { id: 'north-east', name: 'North-east' },\n        { id: 'north-west', name: 'North-west' },\n        { id: 'south-east', name: 'South-east' },\n        { id: 'south-west', name: 'South-west' }\n    ];\n\n    // Вспомогательная функция для создания списка позиций\n    getPossiblePositions = () => Array.from({ length: 26 }, (_, i) => ({ id: i, name: i }));\n\n    // Обработчик изменения сотрудника\n    onEmployeeChange = (employee, member, index) => {\n        this.props.dispatch(change('deskForm', `employees[${index}].identifier`, employee ? employee.identifier : ''));\n    }\n\n    // Обработчик изменения оборудования\n    onEquipmentChange = (equipment, member, index) => {\n        this.props.dispatch(change('deskForm', `equipments[${index}].type`, equipment ? equipment.type : ''));\n    }\n\n    // Обработчик загрузки файла\n    handleFileUpload = event => {\n        const file = event.target.files[0];\n        if (!file) return;\n\n        const formData = new FormData();\n        formData.append('templateFile', file);\n\n        fetch('/api/path_to_upload_endpoint', {\n            method: 'POST',\n            body: formData\n        })\n        .then(response => response.json())\n        .then(data => {\n            console.log('Success:', data);\n        })\n        .catch(error => {\n            console.error('Error:', error);\n        });\n    }\n\n    render() {\n        const { handleSubmit, submitLabel, readOnly, rooms, employees, equipments, officeData, idSelected, init, cancelLabel, submitClass } = this.props;\n        const functionShow = submitLabel === 'Create' ? showCreate : showUpdate;\n\n        return (\n            <form role='form' onSubmit={handleSubmit}>\n                <div className='box-body'>\n                    <Field name='roomId' label='Комната' cols='12 6'\n                        component={Select} readOnly={readOnly}\n                        options={rooms} optionValue='id' optionLabel='name' autoFocus={true}\n                        inputOnChange={this.props.getOfficeData} />\n                    <Field name='chairDirection' label='Направление стола' cols='12 2'\n                        component={SelectWithIcon} icon=\"compass\" readOnly={readOnly}\n                        options={this.getPossibleDirections()} optionValue='id' optionLabel='name' />\n                    <Field name='x' label='X позиция' cols='12 2'\n                        component={SelectWithIcon} icon=\"map-marker\" readOnly={readOnly}\n                        options={this.getPossiblePositions()} optionValue='id' optionLabel='name' />\n                    <Field name='y' label='Y позиция' cols='12 2'\n                        component={SelectWithIcon} icon=\"map-marker\" readOnly={readOnly}\n                        options={this.getPossiblePositions()} optionValue='id' optionLabel='name' />\n\n                    <EmployeeList id=\"employeeList\" cols='12 6' list={employees} readOnly={readOnly}\n                        field='employees' legend='Рабочий' icon='user-plus' onSelected={this.onEmployeeChange} />\n\n                    <EquipmentList cols='12 6' list={equipments} readOnly={readOnly}\n                        field='equipments' legend='Оборудование' icon='laptop' onSelected={this.onEquipmentChange} />\n\n                    <div className=\"form-group\">\n                        <label htmlFor=\"file-upload\" className=\"btn btn-default\">\n                            Загрузить шаблон\n                        </label>\n                        <input id=\"file-upload\" type=\"file\" style={{ display: 'none' }} onChange={this.handleFileUpload} />\n                    </div>\n                </div>\n                <div className='box-footer text-right'>\n                    <button type='submit' className={`btn btn-${submitClass}`}>\n                        {submitLabel}\n                    </button>\n                    <button type='button' className='btn btn-default' onClick={init}>\n                        {cancelLabel}\n                    </button>\n                </div>\n                <If test={officeData && officeData.length > 0}>\n                    <div className='box-footer'>\n                        <Grid cols='12'>\n                            <div className=\"box box-default\">\n                                <div className=\"box-header with-border\">\n                                    <i className=\"fa fa-building-o\"></i>\n                                    <h3 className=\"box-title\">Office Map</h3>\n                                </div>\n                                <div className=\"box-body\">\n                                    <OfficeMap\n                                        id={officeData[0].room}\n                                        data={officeData}\n                                        horizontalSize={6}\n                                        verticalSize={6}\n                                        onSelect={desk => this.props.prepareToShow(desk, functionShow)}\n                                        onMove={desk => this.props.update(desk, functionShow)}\n                                        editMode={true}\n                                        showNavigator={true}\n                                        fields={['type', 'patrimony', 'specification']} \n                                        idSelected={idSelected} />\n                                </div>\n                            </div>\n                        </Grid>\n                    </div>\n                </If>\n            </form>\n        )\n    }\n}\n\n// Redux Form и подключение к Redux Store\nDeskForm = reduxForm({ form: 'deskForm', destroyOnUnmount: false })(DeskForm);\nconst selector = formValueSelector('deskForm');\nconst mapStateToProps = state => ({\n    rooms: state.room.list,\n    officeData: state.desk.officeData,\n    equipments: state.equipment.list,\n    employees: state.employee.list,\n    idSelected: state.desk.idSelected\n});\nconst mapDispatchToProps = dispatch => bindActionCreators({\n    init, getRooms, getEmployees, getEquipments, getOfficeData, prepareToShow, showCreate, showUpdate, update\n}, dispatch);\nexport default connect(mapStateToProps, mapDispatchToProps)(DeskForm);\n"]},"metadata":{},"sourceType":"module"}